//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslDiagrams = global::Microsoft.VisualStudio.Modeling.Diagrams;
namespace ApiStudioIO
{
	/// <summary>
	/// DomainModel ApiStudioIODomainModel
	/// Azure Function (ApiStudio) design component for visual studio
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudioIODomainModel.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.ApiStudioIODomainModel.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[global::System.CLSCompliant(true)]
	[DslModeling::DependsOnDomainModel(typeof(global::Microsoft.VisualStudio.Modeling.CoreDomainModel))]
	[DslModeling::DependsOnDomainModel(typeof(global::Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel))]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]
	[DslModeling::DomainObjectId("6901cf7d-afbd-4a0a-a1bc-da1fe25f0e73")]
	public partial class ApiStudioIODomainModel : DslModeling::DomainModel
	{
		#region Constructor, domain model Id
	
		/// <summary>
		/// ApiStudioIODomainModel domain model Id.
		/// </summary>
		public static readonly global::System.Guid DomainModelId = new global::System.Guid(0x6901cf7d, 0xafbd, 0x4a0a, 0xa1, 0xbc, 0xda, 0x1f, 0xe2, 0x5f, 0x0e, 0x73);
	
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="store">Store containing the domain model.</param>
		public ApiStudioIODomainModel(DslModeling::Store store)
			: base(store, DomainModelId)
		{
			// Call the partial method to allow any required serialization setup to be done.
			this.InitializeSerialization(store);		
		}
		
	
		///<Summary>
		/// Defines a partial method that will be called from the constructor to
		/// allow any necessary serialization setup to be done.
		///</Summary>
		///<remarks>
		/// For a DSL created with the DSL Designer wizard, an implementation of this 
		/// method will be generated in the GeneratedCode\SerializationHelper.cs class.
		///</remarks>
		partial void InitializeSerialization(DslModeling::Store store);
	
	
		#endregion
		#region Domain model reflection
			
		/// <summary>
		/// Gets the list of generated domain model types (classes, rules, relationships).
		/// </summary>
		/// <returns>List of types.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		protected sealed override global::System.Type[] GetGeneratedDomainModelTypes()
		{
			return new global::System.Type[]
			{
				typeof(ApiStudio),
				typeof(Resource),
				typeof(ResourceInstance),
				typeof(ResourceCollection),
				typeof(HttpApi),
				typeof(ResourceAction),
				typeof(HttpApiGet),
				typeof(HttpApiPut),
				typeof(HttpApiPost),
				typeof(HttpApiDelete),
				typeof(DataModel),
				typeof(ResourceAttribute),
				typeof(HttpApiMediaTypeResponse),
				typeof(HttpApiMediaTypeRequest),
				typeof(HttpApiParameter),
				typeof(HttpApiResponseStatusCode),
				typeof(Api),
				typeof(HttpApiMediaType),
				typeof(HttpApiHeader),
				typeof(HttpApiHeaderRequest),
				typeof(HttpApiHeaderResponse),
				typeof(HttpApiPatch),
				typeof(HttpApiHead),
				typeof(HttpApiOptions),
				typeof(HttpApiTrace),
				typeof(ResourceReferencesResources),
				typeof(HttpApiSuccessRequestModel),
				typeof(HttpApiSuccessResponseModel),
				typeof(HttpApiHasParameters),
				typeof(HttpApiHasResponseStatusCodes),
				typeof(HttpApiHasMediaTypeResponse),
				typeof(HttpApiHasMediaTypeRequest),
				typeof(ResourceReferencesApis),
				typeof(HttpApiHasHeaderRequest),
				typeof(HttpApiHasHeaderResponse),
				typeof(ApiStudioHasResourced),
				typeof(ApiStudioHasApis),
				typeof(ApiStudioHasDataModeled),
				typeof(ApiStudioDiagram),
				typeof(ResourceToResourceConnector),
				typeof(ResourceToApiConnector),
				typeof(DataModelToHttpApiConnector),
				typeof(RestToDataModelConnector),
				typeof(DataModelShape),
				typeof(ResourceShape),
				typeof(ResourceInstanceShape),
				typeof(ResourceCollectionShape),
				typeof(ResourceActionShape),
				typeof(HttpApiShape),
				typeof(HttpApiPutShape),
				typeof(HttpApiPostShape),
				typeof(HttpApiDeleteShape),
				typeof(HttpApiGetShape),
				typeof(ResourceAttributeShape),
				typeof(HttpApiPatchShape),
				typeof(HttpApiHeadShape),
				typeof(HttpApiOptionsShape),
				typeof(HttpApiTraceShape),
				typeof(global::ApiStudioIO.FixUpDiagram),
				typeof(global::ApiStudioIO.ConnectorRolePlayerChanged),
				typeof(global::ApiStudioIO.CompartmentItemAddRule),
				typeof(global::ApiStudioIO.CompartmentItemDeleteRule),
				typeof(global::ApiStudioIO.CompartmentItemRolePlayerChangeRule),
				typeof(global::ApiStudioIO.CompartmentItemRolePlayerPositionChangeRule),
				typeof(global::ApiStudioIO.CompartmentItemChangeRule),
			};
		}
		/// <summary>
		/// Gets the list of generated domain properties.
		/// </summary>
		/// <returns>List of property data.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		protected sealed override DomainMemberInfo[] GetGeneratedDomainProperties()
		{
			return new DomainMemberInfo[]
			{
				new DomainMemberInfo(typeof(ApiStudio), "CodeGenerationVariableCaseType", ApiStudio.CodeGenerationVariableCaseTypeDomainPropertyId, typeof(ApiStudio.CodeGenerationVariableCaseTypePropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "Identifier", ApiStudio.IdentifierDomainPropertyId, typeof(ApiStudio.IdentifierPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "Vendor", ApiStudio.VendorDomainPropertyId, typeof(ApiStudio.VendorPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "Product", ApiStudio.ProductDomainPropertyId, typeof(ApiStudio.ProductPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ApiName", ApiStudio.ApiNameDomainPropertyId, typeof(ApiStudio.ApiNamePropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "Version", ApiStudio.VersionDomainPropertyId, typeof(ApiStudio.VersionPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "Title", ApiStudio.TitleDomainPropertyId, typeof(ApiStudio.TitlePropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "Description", ApiStudio.DescriptionDomainPropertyId, typeof(ApiStudio.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ContactUrl", ApiStudio.ContactUrlDomainPropertyId, typeof(ApiStudio.ContactUrlPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ContactName", ApiStudio.ContactNameDomainPropertyId, typeof(ApiStudio.ContactNamePropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "Audience", ApiStudio.AudienceDomainPropertyId, typeof(ApiStudio.AudiencePropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "InitialResourceIsRoot", ApiStudio.InitialResourceIsRootDomainPropertyId, typeof(ApiStudio.InitialResourceIsRootPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ResponseCodesSecurity", ApiStudio.ResponseCodesSecurityDomainPropertyId, typeof(ApiStudio.ResponseCodesSecurityPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ResponseCodesBadRequest", ApiStudio.ResponseCodesBadRequestDomainPropertyId, typeof(ApiStudio.ResponseCodesBadRequestPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ResponseCodesNotFound", ApiStudio.ResponseCodesNotFoundDomainPropertyId, typeof(ApiStudio.ResponseCodesNotFoundPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ResponseCodesNotAllowed", ApiStudio.ResponseCodesNotAllowedDomainPropertyId, typeof(ApiStudio.ResponseCodesNotAllowedPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ResponseCodesUnprocessable", ApiStudio.ResponseCodesUnprocessableDomainPropertyId, typeof(ApiStudio.ResponseCodesUnprocessablePropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ResponseCodesUnsupportedMediaType", ApiStudio.ResponseCodesUnsupportedMediaTypeDomainPropertyId, typeof(ApiStudio.ResponseCodesUnsupportedMediaTypePropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "ResponseCodesServerError", ApiStudio.ResponseCodesServerErrorDomainPropertyId, typeof(ApiStudio.ResponseCodesServerErrorPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "SecurityApiKey", ApiStudio.SecurityApiKeyDomainPropertyId, typeof(ApiStudio.SecurityApiKeyPropertyHandler)),
				new DomainMemberInfo(typeof(ApiStudio), "SecuritySchemeType", ApiStudio.SecuritySchemeTypeDomainPropertyId, typeof(ApiStudio.SecuritySchemeTypePropertyHandler)),
				new DomainMemberInfo(typeof(Resource), "Name", Resource.NameDomainPropertyId, typeof(Resource.NamePropertyHandler)),
				new DomainMemberInfo(typeof(Resource), "HttpApiUri", Resource.HttpApiUriDomainPropertyId, typeof(Resource.HttpApiUriPropertyHandler)),
				new DomainMemberInfo(typeof(ResourceInstance), "InstanceIdentity", ResourceInstance.InstanceIdentityDomainPropertyId, typeof(ResourceInstance.InstanceIdentityPropertyHandler)),
				new DomainMemberInfo(typeof(ResourceInstance), "InstanceDescription", ResourceInstance.InstanceDescriptionDomainPropertyId, typeof(ResourceInstance.InstanceDescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(ResourceInstance), "InstanceDataType", ResourceInstance.InstanceDataTypeDomainPropertyId, typeof(ResourceInstance.InstanceDataTypePropertyHandler)),
				new DomainMemberInfo(typeof(ResourceCollection), "UsePagination", ResourceCollection.UsePaginationDomainPropertyId, typeof(ResourceCollection.UsePaginationPropertyHandler)),
				new DomainMemberInfo(typeof(ResourceCollection), "UseSorting", ResourceCollection.UseSortingDomainPropertyId, typeof(ResourceCollection.UseSortingPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApi), "Description", HttpApi.DescriptionDomainPropertyId, typeof(HttpApi.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApi), "AuthorisationRole", HttpApi.AuthorisationRoleDomainPropertyId, typeof(HttpApi.AuthorisationRolePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApi), "HttpVerb", HttpApi.HttpVerbDomainPropertyId, typeof(HttpApi.HttpVerbPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApi), "RequestParameters", HttpApi.RequestParametersDomainPropertyId, typeof(HttpApi.RequestParametersPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApi), "ResponseStatusCodes", HttpApi.ResponseStatusCodesDomainPropertyId, typeof(HttpApi.ResponseStatusCodesPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApi), "ResponseMediaTypes", HttpApi.ResponseMediaTypesDomainPropertyId, typeof(HttpApi.ResponseMediaTypesPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApi), "RequestMediaTypes", HttpApi.RequestMediaTypesDomainPropertyId, typeof(HttpApi.RequestMediaTypesPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApi), "ResponseHeaders", HttpApi.ResponseHeadersDomainPropertyId, typeof(HttpApi.ResponseHeadersPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApi), "RequestHeaders", HttpApi.RequestHeadersDomainPropertyId, typeof(HttpApi.RequestHeadersPropertyHandler)),
				new DomainMemberInfo(typeof(DataModel), "Name", DataModel.NameDomainPropertyId, typeof(DataModel.NamePropertyHandler)),
				new DomainMemberInfo(typeof(DataModel), "Description", DataModel.DescriptionDomainPropertyId, typeof(DataModel.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiParameter), "Identifier", HttpApiParameter.IdentifierDomainPropertyId, typeof(HttpApiParameter.IdentifierPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiParameter), "DataType", HttpApiParameter.DataTypeDomainPropertyId, typeof(HttpApiParameter.DataTypePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiParameter), "Description", HttpApiParameter.DescriptionDomainPropertyId, typeof(HttpApiParameter.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiParameter), "IsRequired", HttpApiParameter.IsRequiredDomainPropertyId, typeof(HttpApiParameter.IsRequiredPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiParameter), "FromType", HttpApiParameter.FromTypeDomainPropertyId, typeof(HttpApiParameter.FromTypePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiParameter), "IsAutoGenerated", HttpApiParameter.IsAutoGeneratedDomainPropertyId, typeof(HttpApiParameter.IsAutoGeneratedPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiParameter), "DisplayName", HttpApiParameter.DisplayNameDomainPropertyId, typeof(HttpApiParameter.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiResponseStatusCode), "DisplayName", HttpApiResponseStatusCode.DisplayNameDomainPropertyId, typeof(HttpApiResponseStatusCode.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiResponseStatusCode), "HttpStatus", HttpApiResponseStatusCode.HttpStatusDomainPropertyId, typeof(HttpApiResponseStatusCode.HttpStatusPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiResponseStatusCode), "Type", HttpApiResponseStatusCode.TypeDomainPropertyId, typeof(HttpApiResponseStatusCode.TypePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiResponseStatusCode), "Description", HttpApiResponseStatusCode.DescriptionDomainPropertyId, typeof(HttpApiResponseStatusCode.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiResponseStatusCode), "IsAutoGenerated", HttpApiResponseStatusCode.IsAutoGeneratedDomainPropertyId, typeof(HttpApiResponseStatusCode.IsAutoGeneratedPropertyHandler)),
				new DomainMemberInfo(typeof(Api), "DisplayName", Api.DisplayNameDomainPropertyId, typeof(Api.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(Api), "ImperativeVerb", Api.ImperativeVerbDomainPropertyId, typeof(Api.ImperativeVerbPropertyHandler)),
				new DomainMemberInfo(typeof(Api), "Identifier", Api.IdentifierDomainPropertyId, typeof(Api.IdentifierPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiMediaType), "DisplayName", HttpApiMediaType.DisplayNameDomainPropertyId, typeof(HttpApiMediaType.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiMediaType), "PrimaryType", HttpApiMediaType.PrimaryTypeDomainPropertyId, typeof(HttpApiMediaType.PrimaryTypePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiMediaType), "SubType", HttpApiMediaType.SubTypeDomainPropertyId, typeof(HttpApiMediaType.SubTypePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiHeader), "Name", HttpApiHeader.NameDomainPropertyId, typeof(HttpApiHeader.NamePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiHeader), "Description", HttpApiHeader.DescriptionDomainPropertyId, typeof(HttpApiHeader.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiHeader), "IsRequired", HttpApiHeader.IsRequiredDomainPropertyId, typeof(HttpApiHeader.IsRequiredPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiHeader), "AllowEmptyValue", HttpApiHeader.AllowEmptyValueDomainPropertyId, typeof(HttpApiHeader.AllowEmptyValuePropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiHeader), "IsAutoGenerated", HttpApiHeader.IsAutoGeneratedDomainPropertyId, typeof(HttpApiHeader.IsAutoGeneratedPropertyHandler)),
				new DomainMemberInfo(typeof(HttpApiHeaderResponse), "IncludeOn", HttpApiHeaderResponse.IncludeOnDomainPropertyId, typeof(HttpApiHeaderResponse.IncludeOnPropertyHandler)),
			};
		}
		/// <summary>
		/// Gets the list of generated domain roles.
		/// </summary>
		/// <returns>List of role data.</returns>
		protected sealed override DomainRolePlayerInfo[] GetGeneratedDomainRoles()
		{
			return new DomainRolePlayerInfo[]
			{
				new DomainRolePlayerInfo(typeof(ResourceReferencesResources), "SourceResource", ResourceReferencesResources.SourceResourceDomainRoleId),
				new DomainRolePlayerInfo(typeof(ResourceReferencesResources), "TargetResource", ResourceReferencesResources.TargetResourceDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiSuccessRequestModel), "DataModel", HttpApiSuccessRequestModel.DataModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiSuccessRequestModel), "HttpApi", HttpApiSuccessRequestModel.HttpApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiSuccessResponseModel), "HttpApi", HttpApiSuccessResponseModel.HttpApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiSuccessResponseModel), "DataModel", HttpApiSuccessResponseModel.DataModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasParameters), "HttpApi", HttpApiHasParameters.HttpApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasParameters), "HttpApiParameter", HttpApiHasParameters.HttpApiParameterDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasResponseStatusCodes), "HttpApi", HttpApiHasResponseStatusCodes.HttpApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasResponseStatusCodes), "HttpApiResponseStatusCode", HttpApiHasResponseStatusCodes.HttpApiResponseStatusCodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasMediaTypeResponse), "HttpApi", HttpApiHasMediaTypeResponse.HttpApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasMediaTypeResponse), "HttpApiMediaTypeResponse", HttpApiHasMediaTypeResponse.HttpApiMediaTypeResponseDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasMediaTypeRequest), "HttpApi", HttpApiHasMediaTypeRequest.HttpApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasMediaTypeRequest), "HttpApiMediaTypeRequest", HttpApiHasMediaTypeRequest.HttpApiMediaTypeRequestDomainRoleId),
				new DomainRolePlayerInfo(typeof(ResourceReferencesApis), "Resource", ResourceReferencesApis.ResourceDomainRoleId),
				new DomainRolePlayerInfo(typeof(ResourceReferencesApis), "Api", ResourceReferencesApis.ApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasHeaderRequest), "HttpApi", HttpApiHasHeaderRequest.HttpApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasHeaderRequest), "HttpApiHeaderRequest", HttpApiHasHeaderRequest.HttpApiHeaderRequestDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasHeaderResponse), "HttpApi", HttpApiHasHeaderResponse.HttpApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(HttpApiHasHeaderResponse), "HttpApiHeaderResponse", HttpApiHasHeaderResponse.HttpApiHeaderResponseDomainRoleId),
				new DomainRolePlayerInfo(typeof(ApiStudioHasResourced), "ApiStudio", ApiStudioHasResourced.ApiStudioDomainRoleId),
				new DomainRolePlayerInfo(typeof(ApiStudioHasResourced), "Resource", ApiStudioHasResourced.ResourceDomainRoleId),
				new DomainRolePlayerInfo(typeof(ApiStudioHasApis), "ApiStudio", ApiStudioHasApis.ApiStudioDomainRoleId),
				new DomainRolePlayerInfo(typeof(ApiStudioHasApis), "Api", ApiStudioHasApis.ApiDomainRoleId),
				new DomainRolePlayerInfo(typeof(ApiStudioHasDataModeled), "ApiStudio", ApiStudioHasDataModeled.ApiStudioDomainRoleId),
				new DomainRolePlayerInfo(typeof(ApiStudioHasDataModeled), "DataModel", ApiStudioHasDataModeled.DataModelDomainRoleId),
			};
		}
		#endregion
		#region Factory methods
		private static global::System.Collections.Generic.Dictionary<global::System.Type, int> createElementMap;
	
		/// <summary>
		/// Creates an element of specified type.
		/// </summary>
		/// <param name="partition">Partition where element is to be created.</param>
		/// <param name="elementType">Element type which belongs to this domain model.</param>
		/// <param name="propertyAssignments">New element property assignments.</param>
		/// <returns>Created element.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		public sealed override DslModeling::ModelElement CreateElement(DslModeling::Partition partition, global::System.Type elementType, DslModeling::PropertyAssignment[] propertyAssignments)
		{
			if (elementType == null) throw new global::System.ArgumentNullException("elementType");
	
			if (createElementMap == null)
			{
				createElementMap = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(45);
				createElementMap.Add(typeof(ApiStudio), 0);
				createElementMap.Add(typeof(ResourceInstance), 1);
				createElementMap.Add(typeof(ResourceCollection), 2);
				createElementMap.Add(typeof(ResourceAction), 3);
				createElementMap.Add(typeof(HttpApiGet), 4);
				createElementMap.Add(typeof(HttpApiPut), 5);
				createElementMap.Add(typeof(HttpApiPost), 6);
				createElementMap.Add(typeof(HttpApiDelete), 7);
				createElementMap.Add(typeof(DataModel), 8);
				createElementMap.Add(typeof(ResourceAttribute), 9);
				createElementMap.Add(typeof(HttpApiMediaTypeResponse), 10);
				createElementMap.Add(typeof(HttpApiMediaTypeRequest), 11);
				createElementMap.Add(typeof(HttpApiParameter), 12);
				createElementMap.Add(typeof(HttpApiResponseStatusCode), 13);
				createElementMap.Add(typeof(HttpApiMediaType), 14);
				createElementMap.Add(typeof(HttpApiHeader), 15);
				createElementMap.Add(typeof(HttpApiHeaderRequest), 16);
				createElementMap.Add(typeof(HttpApiHeaderResponse), 17);
				createElementMap.Add(typeof(HttpApiPatch), 18);
				createElementMap.Add(typeof(HttpApiHead), 19);
				createElementMap.Add(typeof(HttpApiOptions), 20);
				createElementMap.Add(typeof(HttpApiTrace), 21);
				createElementMap.Add(typeof(ApiStudioDiagram), 22);
				createElementMap.Add(typeof(ResourceToResourceConnector), 23);
				createElementMap.Add(typeof(ResourceToApiConnector), 24);
				createElementMap.Add(typeof(DataModelToHttpApiConnector), 25);
				createElementMap.Add(typeof(RestToDataModelConnector), 26);
				createElementMap.Add(typeof(DataModelShape), 27);
				createElementMap.Add(typeof(ResourceShape), 28);
				createElementMap.Add(typeof(ResourceInstanceShape), 29);
				createElementMap.Add(typeof(ResourceCollectionShape), 30);
				createElementMap.Add(typeof(ResourceActionShape), 31);
				createElementMap.Add(typeof(HttpApiShape), 32);
				createElementMap.Add(typeof(HttpApiPutShape), 33);
				createElementMap.Add(typeof(HttpApiPostShape), 34);
				createElementMap.Add(typeof(HttpApiDeleteShape), 35);
				createElementMap.Add(typeof(HttpApiGetShape), 36);
				createElementMap.Add(typeof(ResourceAttributeShape), 37);
				createElementMap.Add(typeof(HttpApiPatchShape), 38);
				createElementMap.Add(typeof(HttpApiHeadShape), 39);
				createElementMap.Add(typeof(HttpApiOptionsShape), 40);
				createElementMap.Add(typeof(HttpApiTraceShape), 41);
			}
			int index;
			if (!createElementMap.TryGetValue(elementType, out index))
			{
				// construct exception error message		
				string exceptionError = string.Format(
								global::System.Globalization.CultureInfo.CurrentCulture,
								global::ApiStudioIO.ApiStudioIODomainModel.SingletonResourceManager.GetString("UnrecognizedElementType"),
								elementType.Name);
				throw new global::System.ArgumentException(exceptionError, "elementType");
			}
			switch (index)
			{
				// A constructor was not generated for ApiStudio because it had HasCustomConstructor
				// set to true. Please provide the constructor below.
				case 0: return new ApiStudio(partition, propertyAssignments);
				case 1: return new ResourceInstance(partition, propertyAssignments);
				case 2: return new ResourceCollection(partition, propertyAssignments);
				case 3: return new ResourceAction(partition, propertyAssignments);
				case 4: return new HttpApiGet(partition, propertyAssignments);
				case 5: return new HttpApiPut(partition, propertyAssignments);
				case 6: return new HttpApiPost(partition, propertyAssignments);
				case 7: return new HttpApiDelete(partition, propertyAssignments);
				case 8: return new DataModel(partition, propertyAssignments);
				case 9: return new ResourceAttribute(partition, propertyAssignments);
				case 10: return new HttpApiMediaTypeResponse(partition, propertyAssignments);
				case 11: return new HttpApiMediaTypeRequest(partition, propertyAssignments);
				case 12: return new HttpApiParameter(partition, propertyAssignments);
				case 13: return new HttpApiResponseStatusCode(partition, propertyAssignments);
				case 14: return new HttpApiMediaType(partition, propertyAssignments);
				case 15: return new HttpApiHeader(partition, propertyAssignments);
				case 16: return new HttpApiHeaderRequest(partition, propertyAssignments);
				case 17: return new HttpApiHeaderResponse(partition, propertyAssignments);
				case 18: return new HttpApiPatch(partition, propertyAssignments);
				case 19: return new HttpApiHead(partition, propertyAssignments);
				case 20: return new HttpApiOptions(partition, propertyAssignments);
				case 21: return new HttpApiTrace(partition, propertyAssignments);
				case 22: return new ApiStudioDiagram(partition, propertyAssignments);
				case 23: return new ResourceToResourceConnector(partition, propertyAssignments);
				case 24: return new ResourceToApiConnector(partition, propertyAssignments);
				case 25: return new DataModelToHttpApiConnector(partition, propertyAssignments);
				case 26: return new RestToDataModelConnector(partition, propertyAssignments);
				case 27: return new DataModelShape(partition, propertyAssignments);
				case 28: return new ResourceShape(partition, propertyAssignments);
				case 29: return new ResourceInstanceShape(partition, propertyAssignments);
				case 30: return new ResourceCollectionShape(partition, propertyAssignments);
				case 31: return new ResourceActionShape(partition, propertyAssignments);
				case 32: return new HttpApiShape(partition, propertyAssignments);
				case 33: return new HttpApiPutShape(partition, propertyAssignments);
				case 34: return new HttpApiPostShape(partition, propertyAssignments);
				case 35: return new HttpApiDeleteShape(partition, propertyAssignments);
				case 36: return new HttpApiGetShape(partition, propertyAssignments);
				case 37: return new ResourceAttributeShape(partition, propertyAssignments);
				case 38: return new HttpApiPatchShape(partition, propertyAssignments);
				case 39: return new HttpApiHeadShape(partition, propertyAssignments);
				case 40: return new HttpApiOptionsShape(partition, propertyAssignments);
				case 41: return new HttpApiTraceShape(partition, propertyAssignments);
				default: return null;
			}
		}
	
		private static global::System.Collections.Generic.Dictionary<global::System.Type, int> createElementLinkMap;
	
		/// <summary>
		/// Creates an element link of specified type.
		/// </summary>
		/// <param name="partition">Partition where element is to be created.</param>
		/// <param name="elementLinkType">Element link type which belongs to this domain model.</param>
		/// <param name="roleAssignments">List of relationship role assignments for the new link.</param>
		/// <param name="propertyAssignments">New element property assignments.</param>
		/// <returns>Created element link.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
		public sealed override DslModeling::ElementLink CreateElementLink(DslModeling::Partition partition, global::System.Type elementLinkType, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
		{
			if (elementLinkType == null) throw new global::System.ArgumentNullException("elementLinkType");
			if (roleAssignments == null) throw new global::System.ArgumentNullException("roleAssignments");
	
			if (createElementLinkMap == null)
			{
				createElementLinkMap = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(13);
				createElementLinkMap.Add(typeof(ResourceReferencesResources), 0);
				createElementLinkMap.Add(typeof(HttpApiSuccessRequestModel), 1);
				createElementLinkMap.Add(typeof(HttpApiSuccessResponseModel), 2);
				createElementLinkMap.Add(typeof(HttpApiHasParameters), 3);
				createElementLinkMap.Add(typeof(HttpApiHasResponseStatusCodes), 4);
				createElementLinkMap.Add(typeof(HttpApiHasMediaTypeResponse), 5);
				createElementLinkMap.Add(typeof(HttpApiHasMediaTypeRequest), 6);
				createElementLinkMap.Add(typeof(ResourceReferencesApis), 7);
				createElementLinkMap.Add(typeof(HttpApiHasHeaderRequest), 8);
				createElementLinkMap.Add(typeof(HttpApiHasHeaderResponse), 9);
				createElementLinkMap.Add(typeof(ApiStudioHasResourced), 10);
				createElementLinkMap.Add(typeof(ApiStudioHasApis), 11);
				createElementLinkMap.Add(typeof(ApiStudioHasDataModeled), 12);
			}
			int index;
			if (!createElementLinkMap.TryGetValue(elementLinkType, out index))
			{
				// construct exception error message
				string exceptionError = string.Format(
								global::System.Globalization.CultureInfo.CurrentCulture,
								global::ApiStudioIO.ApiStudioIODomainModel.SingletonResourceManager.GetString("UnrecognizedElementLinkType"),
								elementLinkType.Name);
				throw new global::System.ArgumentException(exceptionError, "elementLinkType");
			
			}
			switch (index)
			{
				case 0: return new ResourceReferencesResources(partition, roleAssignments, propertyAssignments);
				case 1: return new HttpApiSuccessRequestModel(partition, roleAssignments, propertyAssignments);
				case 2: return new HttpApiSuccessResponseModel(partition, roleAssignments, propertyAssignments);
				case 3: return new HttpApiHasParameters(partition, roleAssignments, propertyAssignments);
				case 4: return new HttpApiHasResponseStatusCodes(partition, roleAssignments, propertyAssignments);
				case 5: return new HttpApiHasMediaTypeResponse(partition, roleAssignments, propertyAssignments);
				case 6: return new HttpApiHasMediaTypeRequest(partition, roleAssignments, propertyAssignments);
				case 7: return new ResourceReferencesApis(partition, roleAssignments, propertyAssignments);
				case 8: return new HttpApiHasHeaderRequest(partition, roleAssignments, propertyAssignments);
				case 9: return new HttpApiHasHeaderResponse(partition, roleAssignments, propertyAssignments);
				case 10: return new ApiStudioHasResourced(partition, roleAssignments, propertyAssignments);
				case 11: return new ApiStudioHasApis(partition, roleAssignments, propertyAssignments);
				case 12: return new ApiStudioHasDataModeled(partition, roleAssignments, propertyAssignments);
				default: return null;
			}
		}
		#endregion
		#region Resource manager
		
		private static global::System.Resources.ResourceManager resourceManager;
		
		/// <summary>
		/// The base name of this model's resources.
		/// </summary>
		public const string ResourceBaseName = "ApiStudioIO.GeneratedCode.DomainModelResx";
		
		/// <summary>
		/// Gets the DomainModel's ResourceManager. If the ResourceManager does not already exist, then it is created.
		/// </summary>
		public override global::System.Resources.ResourceManager ResourceManager
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return ApiStudioIODomainModel.SingletonResourceManager;
			}
		}
	
		/// <summary>
		/// Gets the Singleton ResourceManager for this domain model.
		/// </summary>
		public static global::System.Resources.ResourceManager SingletonResourceManager
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				if (ApiStudioIODomainModel.resourceManager == null)
				{
					ApiStudioIODomainModel.resourceManager = new global::System.Resources.ResourceManager(ResourceBaseName, typeof(ApiStudioIODomainModel).Assembly);
				}
				return ApiStudioIODomainModel.resourceManager;
			}
		}
		#endregion
		#region Copy/Remove closures
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter copyClosure;
		/// <summary>
		/// DeleteClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter removeClosure;
		/// <summary>
		/// Returns an IElementVisitorFilter that corresponds to the ClosureType.
		/// </summary>
		/// <param name="type">closure type</param>
		/// <param name="rootElements">collection of root elements</param>
		/// <returns>IElementVisitorFilter or null</returns>
		public override DslModeling::IElementVisitorFilter GetClosureFilter(DslModeling::ClosureType type, global::System.Collections.Generic.ICollection<DslModeling::ModelElement> rootElements)
		{
			switch (type)
			{
				case DslModeling::ClosureType.CopyClosure:
					return ApiStudioIODomainModel.CopyClosure;
				case DslModeling::ClosureType.DeleteClosure:
					return ApiStudioIODomainModel.DeleteClosure;
			}
			return base.GetClosureFilter(type, rootElements);
		}
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter CopyClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (ApiStudioIODomainModel.copyClosure == null)
				{
					DslModeling::ChainingElementVisitorFilter copyFilter = new DslModeling::ChainingElementVisitorFilter();
					copyFilter.AddFilter(new ApiStudioIOCopyClosure());
					copyFilter.AddFilter(new DslModeling::CoreCopyClosure());
					copyFilter.AddFilter(new DslDiagrams::CoreDesignSurfaceCopyClosure());
					
					ApiStudioIODomainModel.copyClosure = copyFilter;
				}
				return ApiStudioIODomainModel.copyClosure;
			}
		}
		/// <summary>
		/// DeleteClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter DeleteClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (ApiStudioIODomainModel.removeClosure == null)
				{
					DslModeling::ChainingElementVisitorFilter removeFilter = new DslModeling::ChainingElementVisitorFilter();
					removeFilter.AddFilter(new ApiStudioIODeleteClosure());
					removeFilter.AddFilter(new DslModeling::CoreDeleteClosure());
					removeFilter.AddFilter(new DslDiagrams::CoreDesignSurfaceDeleteClosure());
		
					ApiStudioIODomainModel.removeClosure = removeFilter;
				}
				return ApiStudioIODomainModel.removeClosure;
			}
		}
		#endregion
		#region Diagram rule helpers
		/// <summary>
		/// Enables rules in this domain model related to diagram fixup for the given store.
		/// If diagram data will be loaded into the store, this method should be called first to ensure
		/// that the diagram behaves properly.
		/// </summary>
		public static void EnableDiagramRules(DslModeling::Store store)
		{
			if(store == null) throw new global::System.ArgumentNullException("store");
			
			DslModeling::RuleManager ruleManager = store.RuleManager;
			ruleManager.EnableRule(typeof(global::ApiStudioIO.FixUpDiagram));
			ruleManager.EnableRule(typeof(global::ApiStudioIO.ConnectorRolePlayerChanged));
			ruleManager.EnableRule(typeof(global::ApiStudioIO.CompartmentItemAddRule));
			ruleManager.EnableRule(typeof(global::ApiStudioIO.CompartmentItemDeleteRule));
			ruleManager.EnableRule(typeof(global::ApiStudioIO.CompartmentItemRolePlayerChangeRule));
			ruleManager.EnableRule(typeof(global::ApiStudioIO.CompartmentItemRolePlayerPositionChangeRule));
			ruleManager.EnableRule(typeof(global::ApiStudioIO.CompartmentItemChangeRule));
		}
		
		/// <summary>
		/// Disables rules in this domain model related to diagram fixup for the given store.
		/// </summary>
		public static void DisableDiagramRules(DslModeling::Store store)
		{
			if(store == null) throw new global::System.ArgumentNullException("store");
			
			DslModeling::RuleManager ruleManager = store.RuleManager;
			ruleManager.DisableRule(typeof(global::ApiStudioIO.FixUpDiagram));
			ruleManager.DisableRule(typeof(global::ApiStudioIO.ConnectorRolePlayerChanged));
			ruleManager.DisableRule(typeof(global::ApiStudioIO.CompartmentItemAddRule));
			ruleManager.DisableRule(typeof(global::ApiStudioIO.CompartmentItemDeleteRule));
			ruleManager.DisableRule(typeof(global::ApiStudioIO.CompartmentItemRolePlayerChangeRule));
			ruleManager.DisableRule(typeof(global::ApiStudioIO.CompartmentItemRolePlayerPositionChangeRule));
			ruleManager.DisableRule(typeof(global::ApiStudioIO.CompartmentItemChangeRule));
		}
		#endregion
	}
		
	#region Copy/Remove closure classes
	/// <summary>
	/// Remove closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ApiStudioIODeleteClosure : ApiStudioIODeleteClosureBase, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ApiStudioIODeleteClosure() : base()
		{
		}
	}
	
	/// <summary>
	/// Base class for remove closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ApiStudioIODeleteClosureBase : DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// DomainRoles
		/// </summary>
		private global::System.Collections.Specialized.HybridDictionary domainRoles;
		/// <summary>
		/// Constructor
		/// </summary>
		public ApiStudioIODeleteClosureBase()
		{
			#region Initialize DomainData Table
			DomainRoles.Add(global::ApiStudioIO.HttpApiHasParameters.HttpApiParameterDomainRoleId, true);
			DomainRoles.Add(global::ApiStudioIO.HttpApiHasResponseStatusCodes.HttpApiResponseStatusCodeDomainRoleId, true);
			DomainRoles.Add(global::ApiStudioIO.HttpApiHasMediaTypeResponse.HttpApiMediaTypeResponseDomainRoleId, true);
			DomainRoles.Add(global::ApiStudioIO.HttpApiHasMediaTypeRequest.HttpApiMediaTypeRequestDomainRoleId, true);
			DomainRoles.Add(global::ApiStudioIO.HttpApiHasHeaderRequest.HttpApiHeaderRequestDomainRoleId, true);
			DomainRoles.Add(global::ApiStudioIO.HttpApiHasHeaderResponse.HttpApiHeaderResponseDomainRoleId, true);
			DomainRoles.Add(global::ApiStudioIO.ApiStudioHasResourced.ResourceDomainRoleId, true);
			DomainRoles.Add(global::ApiStudioIO.ApiStudioHasApis.ApiDomainRoleId, true);
			DomainRoles.Add(global::ApiStudioIO.ApiStudioHasDataModeled.DataModelDomainRoleId, true);
			#endregion
		}
		/// <summary>
		/// Called to ask the filter if a particular relationship from a source element should be included in the traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="sourceRoleInfo">DomainRoleInfo of the role that the source element is playing in the relationship</param>
		/// <param name="domainRelationshipInfo">DomainRelationshipInfo for the ElementLink in question</param>
		/// <param name="targetRelationship">Relationship in question</param>
		/// <returns>Yes if the relationship should be traversed</returns>
		public virtual DslModeling::VisitorFilterResult ShouldVisitRelationship(DslModeling::ElementWalker walker, DslModeling::ModelElement sourceElement, DslModeling::DomainRoleInfo sourceRoleInfo, DslModeling::DomainRelationshipInfo domainRelationshipInfo, DslModeling::ElementLink targetRelationship)
		{
			return DslModeling::VisitorFilterResult.Yes;
		}
		/// <summary>
		/// Called to ask the filter if a particular role player should be Visited during traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
		/// <param name="targetDomainRole">DomainRoleInfo of the target role</param>
		/// <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
		/// <returns></returns>
		public virtual DslModeling::VisitorFilterResult ShouldVisitRolePlayer(DslModeling::ElementWalker walker, DslModeling::ModelElement sourceElement, DslModeling::ElementLink elementLink, DslModeling::DomainRoleInfo targetDomainRole, DslModeling::ModelElement targetRolePlayer)
		{
			if (targetDomainRole == null) throw new global::System.ArgumentNullException("targetDomainRole");
			return this.DomainRoles.Contains(targetDomainRole.Id) ? DslModeling::VisitorFilterResult.Yes : DslModeling::VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// DomainRoles
		/// </summary>
		private global::System.Collections.Specialized.HybridDictionary DomainRoles
		{
			get
			{
				if (this.domainRoles == null)
				{
					this.domainRoles = new global::System.Collections.Specialized.HybridDictionary();
				}
				return this.domainRoles;
			}
		}
	
	}
	/// <summary>
	/// Copy closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ApiStudioIOCopyClosure : ApiStudioIOCopyClosureBase, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ApiStudioIOCopyClosure() : base()
		{
		}
	}
	/// <summary>
	/// Base class for copy closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ApiStudioIOCopyClosureBase : DslModeling::CopyClosureFilter, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ApiStudioIOCopyClosureBase():base()
		{
		}
	}
	#endregion
		
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainEnumeration: HttpApiParameterTypes
	/// Description for ApiStudioIO.HttpApiParameterTypes
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum HttpApiParameterTypes
	{
		/// <summary>
		/// Body
		/// Parameters is taken from Body
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameterTypes/Body.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		Body,
		/// <summary>
		/// Query
		/// Parameters is taken from Query
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameterTypes/Query.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		Query,
		/// <summary>
		/// Path
		/// Parameters is taken from Route
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameterTypes/Path.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		Path,
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainEnumeration: CodeGenerationVariableCaseTypes
	/// Description for ApiStudioIO.CodeGenerationVariableCaseTypes
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum CodeGenerationVariableCaseTypes
	{
		/// <summary>
		/// CamelCase
		/// Description for ApiStudioIO.CodeGenerationVariableCaseTypes.CamelCase
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.CodeGenerationVariableCaseTypes/CamelCase.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		CamelCase = 0,
		/// <summary>
		/// PascalCase
		/// Description for ApiStudioIO.CodeGenerationVariableCaseTypes.PascalCase
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.CodeGenerationVariableCaseTypes/PascalCase.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		PascalCase = 1,
		/// <summary>
		/// SnakeCase
		/// Description for ApiStudioIO.CodeGenerationVariableCaseTypes.SnakeCase
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.CodeGenerationVariableCaseTypes/SnakeCase.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		SnakeCase = 2,
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainEnumeration: HttpApiAudienceTypes
	/// Description for ApiStudioIO.HttpApiAudienceTypes
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum HttpApiAudienceTypes
	{
		/// <summary>
		/// Private
		/// Description for ApiStudioIO.HttpApiAudienceTypes.Private
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiAudienceTypes/Private.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		Private,
		/// <summary>
		/// Partner
		/// Description for ApiStudioIO.HttpApiAudienceTypes.Partner
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiAudienceTypes/Partner.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		Partner,
		/// <summary>
		/// Public
		/// Description for ApiStudioIO.HttpApiAudienceTypes.Public
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiAudienceTypes/Public.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		Public,
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainEnumeration: HttpApiHeaderResponseOnTypes
	/// Description for ApiStudioIO.HttpApiHeaderResponseOnTypes
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum HttpApiHeaderResponseOnTypes
	{
		/// <summary>
		/// OnAlways
		/// Description for ApiStudioIO.HttpApiHeaderResponseOnTypes.OnAlways
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeaderResponseOnTypes/OnAlways.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		OnAlways = 0,
		/// <summary>
		/// OnInformation
		/// Description for ApiStudioIO.HttpApiHeaderResponseOnTypes.OnInformation
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeaderResponseOnTypes/OnInformation.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		OnInformation = 1,
		/// <summary>
		/// OnRedirection
		/// Description for ApiStudioIO.HttpApiHeaderResponseOnTypes.OnRedirection
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeaderResponseOnTypes/OnRedirection.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		OnRedirection = 3,
		/// <summary>
		/// OnServerError
		/// Description for ApiStudioIO.HttpApiHeaderResponseOnTypes.OnServerError
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeaderResponseOnTypes/OnServerError.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		OnServerError = 5,
		/// <summary>
		/// OnClientError
		/// Description for ApiStudioIO.HttpApiHeaderResponseOnTypes.OnClientError
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeaderResponseOnTypes/OnClientError.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		OnClientError = 4,
		/// <summary>
		/// OnSuccess
		/// Description for ApiStudioIO.HttpApiHeaderResponseOnTypes.OnSuccess
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeaderResponseOnTypes/OnSuccess.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		OnSuccess = 2,
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainEnumeration: SecuritySchemeTypes
	/// Description for ApiStudioIO.SecuritySchemeTypes
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum SecuritySchemeTypes
	{
		/// <summary>
		/// None
		/// Description for ApiStudioIO.SecuritySchemeTypes.None
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.SecuritySchemeTypes/None.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		None,
		/// <summary>
		/// Basic
		/// Description for ApiStudioIO.SecuritySchemeTypes.Basic
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.SecuritySchemeTypes/Basic.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		Basic,
		/// <summary>
		/// OAuth2
		/// Description for ApiStudioIO.SecuritySchemeTypes.OAuth2
		/// </summary>
		[DslDesign::DescriptionResource("ApiStudioIO.SecuritySchemeTypes/OAuth2.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		OAuth2,
	}
}

