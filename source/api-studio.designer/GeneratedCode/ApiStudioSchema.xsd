<?xml version="1.0" encoding="utf-8"?>
<xsd:schema id="ApiStudioIOSchema" targetNamespace="http://schemas.microsoft.com/dsltools/ApiStudioIO" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/dsltools/ApiStudioIO" xmlns:core="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import id="CoreSchema" namespace="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" />
  <!-- ApiStudio -->
  <xsd:element name="ApiStudio" type="ApiStudio" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ApiStudio">
    <xsd:annotation>
      <xsd:documentation>Enterprise Application Diagram for component interface definition</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ApiStudioHasResourced -->
          <xsd:element name="resourced" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ApiStudioHasResourced</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="apiStudioHasResourced" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ApiStudioHasResourced needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ApiStudioHasApis -->
          <xsd:element name="apis" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ApiStudioHasApis</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="apiStudioHasApis" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ApiStudioHasApis needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ApiStudioHasDataModeled -->
          <xsd:element name="dataModeled" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ApiStudioHasDataModeled</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="apiStudioHasDataModeled" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ApiStudioHasDataModeled needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- dslVersion -->
        <xsd:attribute name="dslVersion" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Version of the model serialized in this file.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: CodeGenerationVariableCaseType -->
        <xsd:attribute name="codeGenerationVariableCaseType" type="CodeGenerationVariableCaseTypes" >
          <xsd:annotation>
            <xsd:documentation>The variable naming convention to be used.\n- Camel Case &quot;propertyName&quot;\n- Pascel Case &quot;PropertyName&quot;\n- Snake Case &quot;property_name&quot;</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Identifier -->
        <xsd:attribute name="identifier" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>ApiStudio Identifier unique to this schema</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Vendor -->
        <xsd:attribute name="vendor" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The name of the organisation providing the API specification. This will form part of the contract title</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Product -->
        <xsd:attribute name="product" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The name of the product the api is part a member. This will form part of the contract title</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ApiName -->
        <xsd:attribute name="apiName" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The name of the API. Normally based on the subdomain and/or feature for the API contract. This will form part of the contract title</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Version -->
        <xsd:attribute name="version" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The version of the API contract. This will form part of the contract title</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Description -->
        <xsd:attribute name="description" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The value is used as the description for the resource tree and will form part of the OpenAPI specification</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ContactUrl -->
        <xsd:attribute name="contactUrl" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The url which provides additional information about the solution or team</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ContactName -->
        <xsd:attribute name="contactName" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The name of the solution provider e.g. team, shared mail, etc..</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Audience -->
        <xsd:attribute name="audience" type="HttpApiAudienceTypes" >
          <xsd:annotation>
            <xsd:documentation>The audience category flags if the consumers are Private (Internal), Partner (Trusted/VPN), Public (Public Domain)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: InitialResourceIsRoot -->
        <xsd:attribute name="initialResourceIsRoot" type="xsd:boolean" >
          <xsd:annotation>
            <xsd:documentation>Determine if the first resource in the resource tree (uri) is used as the root uri e.g. &quot;/&quot; or &quot;/accounts&quot;</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: SecurityApiKey -->
        <xsd:attribute name="securityApiKey" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>An internal server error. The response body may contain error messages.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: SecuritySchemeType -->
        <xsd:attribute name="securitySchemeType" type="SecuritySchemeTypes" >
          <xsd:annotation>
            <xsd:documentation>APIs use authorization to ensure that client requests access data securely. This can involve authenticating the sender of a request and verifying that they have permission to access or manipulate the relevant data. If you&apos;re building an API, you can choose from a variety of auth models.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApiStudio Moniker -->
  <xsd:element name="ApiStudioMoniker" type="ApiStudioMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApiStudioMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ApiStudio instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Resource -->
  <xsd:element name="resource" abstract="true" type="Resource" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Resource" abstract="true" >
    <xsd:annotation>
      <xsd:documentation>Elements embedded in the model. Appear as boxes on the diagram.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ResourceReferencesResources -->
          <xsd:element name="resources" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ResourceReferencesResources</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="resourceReferencesResources" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ResourceReferencesResources needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ResourceReferencesApis -->
          <xsd:element name="apis" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ResourceReferencesApis</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="resourceReferencesApis" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ResourceReferencesApis needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Name -->
        <xsd:attribute name="name" type="xsd:string" use="required" >
          <xsd:annotation>
            <xsd:documentation>The name of a given resource. This name form part of the uri structure.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Resource Moniker -->
  <xsd:element name="resourceMoniker" abstract="true" type="ResourceMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ResourceMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Resource instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="name" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceInstance -->
  <xsd:element name="ResourceInstance" type="ResourceInstance" substitutionGroup="resource" />
  <xsd:complexType name="ResourceInstance">
    <xsd:annotation>
      <xsd:documentation>A instance resource is a singular concept that is akin to an object instance or database record. In REST, you can view it as a single resource inside resource collection. A document’s state representation typically includes both fields with values and links to other related resources.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Resource">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: InstanceIdentity -->
        <xsd:attribute name="InstanceIdentity" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>A unique, immutable identifier that identifies a resource</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: InstanceDescription -->
        <xsd:attribute name="InstanceDescription" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The description associated to the unique code used to help 3rd parties identify the value</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: InstanceDataType -->
        <xsd:attribute name="InstanceDataType" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The data type for the unique code parameter</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceInstance Moniker -->
  <xsd:element name="ResourceInstanceMoniker" type="ResourceInstanceMoniker" substitutionGroup="resourceMoniker" />
  <xsd:complexType name="ResourceInstanceMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ResourceInstance instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ResourceMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceCollection -->
  <xsd:element name="resourceCollection" type="ResourceCollection" substitutionGroup="resource" />
  <xsd:complexType name="ResourceCollection">
    <xsd:annotation>
      <xsd:documentation>A collection resource is a server-managed directory of resources. Clients may propose new resources to be added to a collection. However, it is up to the collection to choose to create a new resource, or not. A collection resource chooses what it wants to contain and also decides the URIs of each contained resource.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Resource">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: UsePagination -->
        <xsd:attribute name="usePagination" type="xsd:boolean" >
          <xsd:annotation>
            <xsd:documentation>Use limit and offset parameters to paginate records in a GET request. Note that offset i returns record i+1 as the first record in the set (for example, offset = 0 returns record 1 as the first record in the set, offset =10 returns record 11 as the first record in the set, and so forth).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: UseSorting -->
        <xsd:attribute name="useSorting" type="xsd:boolean" >
          <xsd:annotation>
            <xsd:documentation>Sorting is determined through the use of the ‘sort’ query string parameter. The value of this parameter is a comma-separated list of sort keys. Sort directions can optionally be appended to each sort key, separated by the ‘:’ character. The supported sort directions are either ‘asc’ for ascending or ‘desc’ for descending. The caller may (but is not required to) specify a sort direction for each key. If a sort direction is not specified for a key, then a default is set by the server</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceCollection Moniker -->
  <xsd:element name="resourceCollectionMoniker" type="ResourceCollectionMoniker" substitutionGroup="resourceMoniker" />
  <xsd:complexType name="ResourceCollectionMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ResourceCollection instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ResourceMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApi -->
  <xsd:element name="HttpApi" abstract="true" type="HttpApi" substitutionGroup="api" />
  <xsd:complexType name="HttpApi" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="Api">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: HttpApiSuccessResponseModel -->
          <xsd:element name="dataModels" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of HttpApiSuccessResponseModel</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="HttpApiSuccessResponseModel" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of HttpApiSuccessResponseModel needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: HttpApiHasParameters -->
          <xsd:element name="httpApiParameters" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of HttpApiHasParameters</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="HttpApiHasParameters" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of HttpApiHasParameters needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: HttpApiHasResponseStatusCodes -->
          <xsd:element name="HttpApiResponseStatusCodes" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of HttpApiHasResponseStatusCodes</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="HttpApiHasResponseStatusCodes" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of HttpApiHasResponseStatusCodes needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: HttpApiHasMediaTypeResponse -->
          <xsd:element name="HttpApiMediaTypeResponsed" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of HttpApiHasMediaTypeResponse</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="HttpApiHasMediaTypeResponse" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of HttpApiHasMediaTypeResponse needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: HttpApiHasMediaTypeRequest -->
          <xsd:element name="HttpApiMediaTypeRequestd" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of HttpApiHasMediaTypeRequest</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="HttpApiHasMediaTypeRequest" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of HttpApiHasMediaTypeRequest needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: HttpApiHasHeaderRequest -->
          <xsd:element name="HttpApiHeaderRequests" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of HttpApiHasHeaderRequest</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="HttpApiHasHeaderRequest" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of HttpApiHasHeaderRequest needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: HttpApiHasHeaderResponse -->
          <xsd:element name="HttpApiHeaderResponses" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of HttpApiHasHeaderResponse</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="HttpApiHasHeaderResponse" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of HttpApiHasHeaderResponse needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Description -->
        <xsd:attribute name="description" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The description which will be published for this Rest Resource. The description should be helpful for 3rd parties to understand the purpose of the operation</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApi Moniker -->
  <xsd:element name="HttpApiMoniker" abstract="true" type="HttpApiMoniker" substitutionGroup="apiMoniker" />
  <xsd:complexType name="HttpApiMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApi instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ApiMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceAction -->
  <xsd:element name="resourceAction" type="ResourceAction" substitutionGroup="resource" />
  <xsd:complexType name="ResourceAction">
    <xsd:annotation>
      <xsd:documentation>An action resource models a procedural concept. Action resources are like executable functions, with parameters and return values; inputs and outputs.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Resource">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceAction Moniker -->
  <xsd:element name="resourceActionMoniker" type="ResourceActionMoniker" substitutionGroup="resourceMoniker" />
  <xsd:complexType name="ResourceActionMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ResourceAction instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ResourceMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiGet -->
  <xsd:element name="HttpApiGet" type="HttpApiGet" substitutionGroup="HttpApi" />
  <xsd:complexType name="HttpApiGet">
    <xsd:annotation>
      <xsd:documentation>The GET method requests a representation of the specified resource. Requests using GET should only retrieve data.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApi">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiGet Moniker -->
  <xsd:element name="HttpApiGetMoniker" type="HttpApiGetMoniker" substitutionGroup="HttpApiMoniker" />
  <xsd:complexType name="HttpApiGetMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiGet instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiPut -->
  <xsd:element name="HttpApiPut" type="HttpApiPut" substitutionGroup="HttpApi" />
  <xsd:complexType name="HttpApiPut">
    <xsd:annotation>
      <xsd:documentation>The PUT method replaces all current representations of the target resource with the request payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApi">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiPut Moniker -->
  <xsd:element name="HttpApiPutMoniker" type="HttpApiPutMoniker" substitutionGroup="HttpApiMoniker" />
  <xsd:complexType name="HttpApiPutMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiPut instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiPost -->
  <xsd:element name="HttpApiPost" type="HttpApiPost" substitutionGroup="HttpApi" />
  <xsd:complexType name="HttpApiPost">
    <xsd:annotation>
      <xsd:documentation>The POST method submits an entity to the specified resource, often causing a change in state or side effects on the server.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApi">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiPost Moniker -->
  <xsd:element name="HttpApiPostMoniker" type="HttpApiPostMoniker" substitutionGroup="HttpApiMoniker" />
  <xsd:complexType name="HttpApiPostMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiPost instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiDelete -->
  <xsd:element name="HttpApiDelete" type="HttpApiDelete" substitutionGroup="HttpApi" />
  <xsd:complexType name="HttpApiDelete">
    <xsd:annotation>
      <xsd:documentation>The DELETE method deletes the specified resource.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApi">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiDelete Moniker -->
  <xsd:element name="HttpApiDeleteMoniker" type="HttpApiDeleteMoniker" substitutionGroup="HttpApiMoniker" />
  <xsd:complexType name="HttpApiDeleteMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiDelete instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- DataModel -->
  <xsd:element name="dataModel" type="DataModel" substitutionGroup="core:modelElement" />
  <xsd:complexType name="DataModel">
    <xsd:annotation>
      <xsd:documentation>Data entities to be used as definition within OpenAPI specifciation</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: HttpApiSuccessRequestModel -->
          <xsd:element name="HttpApis" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of HttpApiSuccessRequestModel</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="HttpApiSuccessRequestModel" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of HttpApiSuccessRequestModel needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Name -->
        <xsd:attribute name="name" type="xsd:string" use="required" >
          <xsd:annotation>
            <xsd:documentation>The name of the data model. This should align with the GDM name when possible.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Description -->
        <xsd:attribute name="description" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The description of the data model. This should align with the GDM name when possible.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- DataModel Moniker -->
  <xsd:element name="dataModelMoniker" type="DataModelMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="DataModelMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for DataModel instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="name" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceAttribute -->
  <xsd:element name="resourceAttribute" type="ResourceAttribute" substitutionGroup="resource" />
  <xsd:complexType name="ResourceAttribute">
    <xsd:annotation>
      <xsd:documentation>An attribute resource is a procedural concept. Attributes allow the specific resource for a given attribute of a parent resource. Typically Getter and Putter functionality.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Resource">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceAttribute Moniker -->
  <xsd:element name="resourceAttributeMoniker" type="ResourceAttributeMoniker" substitutionGroup="resourceMoniker" />
  <xsd:complexType name="ResourceAttributeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ResourceAttribute instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ResourceMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiMediaTypeResponse -->
  <xsd:element name="HttpApiMediaTypeResponse" type="HttpApiMediaTypeResponse" substitutionGroup="httpApiMediaType" />
  <xsd:complexType name="HttpApiMediaTypeResponse">
    <xsd:complexContent>
      <xsd:extension base="HttpApiMediaType">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiMediaTypeResponse Moniker -->
  <xsd:element name="HttpApiMediaTypeResponseMoniker" type="HttpApiMediaTypeResponseMoniker" substitutionGroup="httpApiMediaTypeMoniker" />
  <xsd:complexType name="HttpApiMediaTypeResponseMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiMediaTypeResponse instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMediaTypeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiMediaTypeRequest -->
  <xsd:element name="HttpApiMediaTypeRequest" type="HttpApiMediaTypeRequest" substitutionGroup="httpApiMediaType" />
  <xsd:complexType name="HttpApiMediaTypeRequest">
    <xsd:complexContent>
      <xsd:extension base="HttpApiMediaType">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiMediaTypeRequest Moniker -->
  <xsd:element name="HttpApiMediaTypeRequestMoniker" type="HttpApiMediaTypeRequestMoniker" substitutionGroup="httpApiMediaTypeMoniker" />
  <xsd:complexType name="HttpApiMediaTypeRequestMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiMediaTypeRequest instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMediaTypeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiParameter -->
  <xsd:element name="httpApiParameter" type="HttpApiParameter" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiParameter">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Identifier -->
        <xsd:attribute name="identifier" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The identifier (variable name) of the given parameter</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: DataType -->
        <xsd:attribute name="dataType" type="xsd:string" />
        <!-- Property: Description -->
        <xsd:attribute name="description" type="xsd:string" />
        <!-- Property: IsRequired -->
        <xsd:attribute name="isRequired" type="xsd:boolean" />
        <!-- Property: FromType -->
        <xsd:attribute name="fromType" type="HttpApiParameterTypes" >
          <xsd:annotation>
            <xsd:documentation>This property determines where the parameter comes from e.g. Header, Body, Query, ...</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: IsAutoGenerated -->
        <xsd:attribute name="isAutoGenerated" type="xsd:boolean" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiParameter Moniker -->
  <xsd:element name="httpApiParameterMoniker" type="HttpApiParameterMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiParameterMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiParameter instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiResponseStatusCode -->
  <xsd:element name="HttpApiResponseStatusCode" type="HttpApiResponseStatusCode" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiResponseStatusCode">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: HttpStatus -->
        <xsd:attribute name="httpStatus" type="xsd:integer" />
        <!-- Property: IsAutoGenerated -->
        <xsd:attribute name="isAutoGenerated" type="xsd:boolean" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiResponseStatusCode Moniker -->
  <xsd:element name="HttpApiResponseStatusCodeMoniker" type="HttpApiResponseStatusCodeMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiResponseStatusCodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiResponseStatusCode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Api -->
  <xsd:element name="api" abstract="true" type="Api" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Api" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ImperativeVerb -->
        <xsd:attribute name="imperativeVerb" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Names (verbs) in the imperative mood plus and may include the aggregate type, for example ConfirmOrder</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Identifier -->
        <xsd:attribute name="identifier" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>ApiStudio Identifier unique to this schema</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Api Moniker -->
  <xsd:element name="apiMoniker" abstract="true" type="ApiMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApiMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Api instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiMediaType -->
  <xsd:element name="httpApiMediaType" type="HttpApiMediaType" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiMediaType">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: DiscreteType -->
        <xsd:attribute name="DiscreteType" type="xsd:string" />
        <!-- Property: SubType -->
        <xsd:attribute name="subType" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiMediaType Moniker -->
  <xsd:element name="httpApiMediaTypeMoniker" type="HttpApiMediaTypeMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiMediaTypeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiMediaType instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHeader -->
  <xsd:element name="httpApiHeader" type="HttpApiHeader" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiHeader">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Name -->
        <xsd:attribute name="name" type="xsd:string" />
        <!-- Property: Description -->
        <xsd:attribute name="description" type="xsd:string" />
        <!-- Property: IsRequired -->
        <xsd:attribute name="isRequired" type="xsd:boolean" />
        <!-- Property: AllowEmptyValue -->
        <xsd:attribute name="allowEmptyValue" type="xsd:boolean" />
        <!-- Property: IsAutoGenerated -->
        <xsd:attribute name="isAutoGenerated" type="xsd:boolean" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHeader Moniker -->
  <xsd:element name="httpApiHeaderMoniker" type="HttpApiHeaderMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiHeaderMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHeader instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHeaderRequest -->
  <xsd:element name="HttpApiHeaderRequest" type="HttpApiHeaderRequest" substitutionGroup="httpApiHeader" />
  <xsd:complexType name="HttpApiHeaderRequest">
    <xsd:complexContent>
      <xsd:extension base="HttpApiHeader">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHeaderRequest Moniker -->
  <xsd:element name="HttpApiHeaderRequestMoniker" type="HttpApiHeaderRequestMoniker" substitutionGroup="httpApiHeaderMoniker" />
  <xsd:complexType name="HttpApiHeaderRequestMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHeaderRequest instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiHeaderMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHeaderResponse -->
  <xsd:element name="HttpApiHeaderResponse" type="HttpApiHeaderResponse" substitutionGroup="httpApiHeader" />
  <xsd:complexType name="HttpApiHeaderResponse">
    <xsd:complexContent>
      <xsd:extension base="HttpApiHeader">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: IncludeOn -->
        <xsd:attribute name="includeOn" type="HttpApiHeaderResponseOnTypes" >
          <xsd:annotation>
            <xsd:documentation>Which type of response should the header be included with.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHeaderResponse Moniker -->
  <xsd:element name="HttpApiHeaderResponseMoniker" type="HttpApiHeaderResponseMoniker" substitutionGroup="httpApiHeaderMoniker" />
  <xsd:complexType name="HttpApiHeaderResponseMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHeaderResponse instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiHeaderMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiPatch -->
  <xsd:element name="httpApiPatch" type="HttpApiPatch" substitutionGroup="HttpApi" />
  <xsd:complexType name="HttpApiPatch">
    <xsd:annotation>
      <xsd:documentation>The PATCH method applies partial modifications to a resource.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApi">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiPatch Moniker -->
  <xsd:element name="httpApiPatchMoniker" type="HttpApiPatchMoniker" substitutionGroup="HttpApiMoniker" />
  <xsd:complexType name="HttpApiPatchMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiPatch instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHead -->
  <xsd:element name="httpApiHead" type="HttpApiHead" substitutionGroup="HttpApi" />
  <xsd:complexType name="HttpApiHead">
    <xsd:annotation>
      <xsd:documentation>The HEAD method asks for a response identical to a GET request, but without the response body.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApi">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHead Moniker -->
  <xsd:element name="httpApiHeadMoniker" type="HttpApiHeadMoniker" substitutionGroup="HttpApiMoniker" />
  <xsd:complexType name="HttpApiHeadMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHead instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiOptions -->
  <xsd:element name="httpApiOptions" type="HttpApiOptions" substitutionGroup="HttpApi" />
  <xsd:complexType name="HttpApiOptions">
    <xsd:annotation>
      <xsd:documentation>The OPTIONS method describes the communication options for the target resource.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApi">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiOptions Moniker -->
  <xsd:element name="httpApiOptionsMoniker" type="HttpApiOptionsMoniker" substitutionGroup="HttpApiMoniker" />
  <xsd:complexType name="HttpApiOptionsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiOptions instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiTrace -->
  <xsd:element name="httpApiTrace" type="HttpApiTrace" substitutionGroup="HttpApi" />
  <xsd:complexType name="HttpApiTrace">
    <xsd:annotation>
      <xsd:documentation>The TRACE method performs a message loop-back test along the path to the target resource.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApi">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiTrace Moniker -->
  <xsd:element name="httpApiTraceMoniker" type="HttpApiTraceMoniker" substitutionGroup="HttpApiMoniker" />
  <xsd:complexType name="HttpApiTraceMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiTrace instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="HttpApiMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceReferencesResources -->
  <xsd:element name="resourceReferencesResources" type="ResourceReferencesResources" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ResourceReferencesResources">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Resource -->
          <xsd:element ref="resourceMoniker" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceReferencesResources Moniker -->
  <xsd:element name="resourceReferencesResourcesMoniker" type="ResourceReferencesResourcesMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ResourceReferencesResourcesMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ResourceReferencesResources instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiSuccessRequestModel -->
  <xsd:element name="HttpApiSuccessRequestModel" type="HttpApiSuccessRequestModel" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiSuccessRequestModel">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end HttpApi -->
          <xsd:element ref="HttpApiMoniker" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiSuccessRequestModel Moniker -->
  <xsd:element name="HttpApiSuccessRequestModelMoniker" type="HttpApiSuccessRequestModelMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiSuccessRequestModelMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiSuccessRequestModel instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiSuccessResponseModel -->
  <xsd:element name="HttpApiSuccessResponseModel" type="HttpApiSuccessResponseModel" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiSuccessResponseModel">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end DataModel -->
          <xsd:element ref="dataModelMoniker" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiSuccessResponseModel Moniker -->
  <xsd:element name="HttpApiSuccessResponseModelMoniker" type="HttpApiSuccessResponseModelMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiSuccessResponseModelMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiSuccessResponseModel instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasParameters -->
  <xsd:element name="HttpApiHasParameters" type="HttpApiHasParameters" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiHasParameters">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end HttpApiParameter -->
          <xsd:element ref="httpApiParameter" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasParameters Moniker -->
  <xsd:element name="HttpApiHasParametersMoniker" type="HttpApiHasParametersMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiHasParametersMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHasParameters instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasResponseStatusCodes -->
  <xsd:element name="HttpApiHasResponseStatusCodes" type="HttpApiHasResponseStatusCodes" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiHasResponseStatusCodes">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end HttpApiResponseStatusCode -->
          <xsd:element ref="HttpApiResponseStatusCode" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasResponseStatusCodes Moniker -->
  <xsd:element name="HttpApiHasResponseStatusCodesMoniker" type="HttpApiHasResponseStatusCodesMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiHasResponseStatusCodesMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHasResponseStatusCodes instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasMediaTypeResponse -->
  <xsd:element name="HttpApiHasMediaTypeResponse" type="HttpApiHasMediaTypeResponse" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiHasMediaTypeResponse">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end HttpApiMediaTypeResponse -->
          <xsd:element ref="HttpApiMediaTypeResponse" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasMediaTypeResponse Moniker -->
  <xsd:element name="HttpApiHasMediaTypeResponseMoniker" type="HttpApiHasMediaTypeResponseMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiHasMediaTypeResponseMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHasMediaTypeResponse instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasMediaTypeRequest -->
  <xsd:element name="HttpApiHasMediaTypeRequest" type="HttpApiHasMediaTypeRequest" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiHasMediaTypeRequest">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end HttpApiMediaTypeRequest -->
          <xsd:element ref="HttpApiMediaTypeRequest" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasMediaTypeRequest Moniker -->
  <xsd:element name="HttpApiHasMediaTypeRequestMoniker" type="HttpApiHasMediaTypeRequestMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiHasMediaTypeRequestMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHasMediaTypeRequest instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceReferencesApis -->
  <xsd:element name="resourceReferencesApis" type="ResourceReferencesApis" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ResourceReferencesApis">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Api -->
          <xsd:element ref="apiMoniker" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResourceReferencesApis Moniker -->
  <xsd:element name="resourceReferencesApisMoniker" type="ResourceReferencesApisMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ResourceReferencesApisMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ResourceReferencesApis instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasHeaderRequest -->
  <xsd:element name="HttpApiHasHeaderRequest" type="HttpApiHasHeaderRequest" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiHasHeaderRequest">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end HttpApiHeaderRequest -->
          <xsd:element ref="HttpApiHeaderRequest" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasHeaderRequest Moniker -->
  <xsd:element name="HttpApiHasHeaderRequestMoniker" type="HttpApiHasHeaderRequestMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiHasHeaderRequestMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHasHeaderRequest instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasHeaderResponse -->
  <xsd:element name="HttpApiHasHeaderResponse" type="HttpApiHasHeaderResponse" substitutionGroup="core:modelElement" />
  <xsd:complexType name="HttpApiHasHeaderResponse">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end HttpApiHeaderResponse -->
          <xsd:element ref="HttpApiHeaderResponse" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- HttpApiHasHeaderResponse Moniker -->
  <xsd:element name="HttpApiHasHeaderResponseMoniker" type="HttpApiHasHeaderResponseMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="HttpApiHasHeaderResponseMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for HttpApiHasHeaderResponse instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApiStudioHasResourced -->
  <xsd:element name="apiStudioHasResourced" type="ApiStudioHasResourced" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ApiStudioHasResourced">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Resource -->
          <xsd:element ref="resource" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApiStudioHasResourced Moniker -->
  <xsd:element name="apiStudioHasResourcedMoniker" type="ApiStudioHasResourcedMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApiStudioHasResourcedMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ApiStudioHasResourced instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApiStudioHasApis -->
  <xsd:element name="apiStudioHasApis" type="ApiStudioHasApis" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ApiStudioHasApis">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Api -->
          <xsd:element ref="api" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApiStudioHasApis Moniker -->
  <xsd:element name="apiStudioHasApisMoniker" type="ApiStudioHasApisMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApiStudioHasApisMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ApiStudioHasApis instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApiStudioHasDataModeled -->
  <xsd:element name="apiStudioHasDataModeled" type="ApiStudioHasDataModeled" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ApiStudioHasDataModeled">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end DataModel -->
          <xsd:element ref="dataModel" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ApiStudioHasDataModeled Moniker -->
  <xsd:element name="apiStudioHasDataModeledMoniker" type="ApiStudioHasDataModeledMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ApiStudioHasDataModeledMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ApiStudioHasDataModeled instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Enum HttpApiParameterTypes -->
  <xsd:simpleType name="HttpApiParameterTypes">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Body">
        <xsd:annotation>
          <xsd:documentation>Parameters is taken from Body</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Query">
        <xsd:annotation>
          <xsd:documentation>Parameters is taken from Query</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Path">
        <xsd:annotation>
          <xsd:documentation>Parameters is taken from Route</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum CodeGenerationVariableCaseTypes -->
  <xsd:simpleType name="CodeGenerationVariableCaseTypes">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CamelCase"/>
      <xsd:enumeration value="PascalCase"/>
      <xsd:enumeration value="SnakeCase"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum HttpApiAudienceTypes -->
  <xsd:simpleType name="HttpApiAudienceTypes">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Private"/>
      <xsd:enumeration value="Partner"/>
      <xsd:enumeration value="Public"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum HttpApiHeaderResponseOnTypes -->
  <xsd:simpleType name="HttpApiHeaderResponseOnTypes">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="OnAlways"/>
      <xsd:enumeration value="OnInformation"/>
      <xsd:enumeration value="OnRedirection"/>
      <xsd:enumeration value="OnServerError"/>
      <xsd:enumeration value="OnClientError"/>
      <xsd:enumeration value="OnSuccess"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum SecuritySchemeTypes -->
  <xsd:simpleType name="SecuritySchemeTypes">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None"/>
      <xsd:enumeration value="Basic"/>
      <xsd:enumeration value="OAuth2"/>
      <xsd:enumeration value="OpenIdConnect"/>
    </xsd:restriction>
  </xsd:simpleType>
  
</xsd:schema>

