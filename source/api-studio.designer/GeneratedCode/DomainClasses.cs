//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass ApiStudio
	/// Enterprise Application Diagram for component interface definition
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("8aba1eb0-dc24-44f9-8751-d236150d7e4e")]
	public partial class ApiStudio : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ApiStudio domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8aba1eb0, 0xdc24, 0x44f9, 0x87, 0x51, 0xd2, 0x36, 0x15, 0x0d, 0x7e, 0x4e);
		// Constructors were not generated for this class because it had HasCustomConstructor
		// set to true. Please provide the constructors below in a partial class.
		///// <summary>
		///// Constructor
		///// </summary>
		///// <param name="store">Store where new element is to be created.</param>
		///// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		//public ApiStudio(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
		//	: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		//{
		//}
		//
		///// <summary>
		///// Constructor
		///// </summary>
		///// <param name="partition">Partition where new element is to be created.</param>
		///// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		//public ApiStudio(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
		//	: base(partition, propertyAssignments)
		//{
		//}
		#endregion
		#region CodeGenerationVariableCaseType domain property code
		
		/// <summary>
		/// CodeGenerationVariableCaseType domain property Id.
		/// </summary>
		public static readonly global::System.Guid CodeGenerationVariableCaseTypeDomainPropertyId = new global::System.Guid(0xbf23063f, 0xbb0a, 0x44f8, 0x85, 0x54, 0xc4, 0xa1, 0x96, 0xb4, 0x52, 0xa0);
		
		/// <summary>
		/// Storage for CodeGenerationVariableCaseType
		/// </summary>
		private CodeGenerationVariableCaseTypes codeGenerationVariableCaseTypePropertyStorage = CodeGenerationVariableCaseTypes.PascalCase;
		
		/// <summary>
		/// Gets or sets the value of CodeGenerationVariableCaseType domain property.
		/// The variable naming convention to be used.\n- Camel Case "propertyName"\n-
		/// Pascel Case "PropertyName"\n- Snake Case "property_name"
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/CodeGenerationVariableCaseType.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/CodeGenerationVariableCaseType.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/CodeGenerationVariableCaseType.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(CodeGenerationVariableCaseTypes.PascalCase)]
		[DslModeling::DomainObjectId("bf23063f-bb0a-44f8-8554-c4a196b452a0")]
		public CodeGenerationVariableCaseTypes CodeGenerationVariableCaseType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return codeGenerationVariableCaseTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CodeGenerationVariableCaseTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.CodeGenerationVariableCaseType domain property.
		/// </summary>
		internal sealed partial class CodeGenerationVariableCaseTypePropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, CodeGenerationVariableCaseTypes>
		{
			private CodeGenerationVariableCaseTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.CodeGenerationVariableCaseType domain property value handler.
			/// </summary>
			public static readonly CodeGenerationVariableCaseTypePropertyHandler Instance = new CodeGenerationVariableCaseTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.CodeGenerationVariableCaseType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CodeGenerationVariableCaseTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed CodeGenerationVariableCaseTypes GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.codeGenerationVariableCaseTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, CodeGenerationVariableCaseTypes newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				CodeGenerationVariableCaseTypes oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.codeGenerationVariableCaseTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Identifier domain property code
		
		/// <summary>
		/// Identifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid IdentifierDomainPropertyId = new global::System.Guid(0x90933f55, 0x837e, 0x4634, 0xbb, 0x05, 0x10, 0x87, 0x11, 0x9e, 0xfb, 0x2f);
		
		/// <summary>
		/// Storage for Identifier
		/// </summary>
		private global::System.Guid identifierPropertyStorage = new global::System.Guid("00000000-0000-0000-0000-000000000000");
		
		/// <summary>
		/// Gets or sets the value of Identifier domain property.
		/// ApiStudio Identifier unique to this schema
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/Identifier.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/Identifier.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/Identifier.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(typeof(global::System.Guid), "00000000-0000-0000-0000-000000000000")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("90933f55-837e-4634-bb05-1087119efb2f")]
		public global::System.Guid Identifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return identifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IdentifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.Identifier domain property.
		/// </summary>
		internal sealed partial class IdentifierPropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.Guid>
		{
			private IdentifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.Identifier domain property value handler.
			/// </summary>
			public static readonly IdentifierPropertyHandler Instance = new IdentifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.Identifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IdentifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.identifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.identifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Vendor domain property code
		
		/// <summary>
		/// Vendor domain property Id.
		/// </summary>
		public static readonly global::System.Guid VendorDomainPropertyId = new global::System.Guid(0x712e1357, 0xa4a1, 0x406b, 0xaf, 0x9e, 0xce, 0x07, 0xd7, 0xb9, 0x9a, 0x05);
		
		/// <summary>
		/// Storage for Vendor
		/// </summary>
		private global::System.String vendorPropertyStorage = "ApiStudio";
		
		/// <summary>
		/// Gets or sets the value of Vendor domain property.
		/// The name of the organisation providing the API specification. This will form
		/// part of the contract title
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/Vendor.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/Vendor.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/Vendor.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("ApiStudio")]
		[DslModeling::DomainObjectId("712e1357-a4a1-406b-af9e-ce07d7b99a05")]
		public global::System.String Vendor
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return vendorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				VendorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.Vendor domain property.
		/// </summary>
		internal sealed partial class VendorPropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.String>
		{
			private VendorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.Vendor domain property value handler.
			/// </summary>
			public static readonly VendorPropertyHandler Instance = new VendorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.Vendor domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return VendorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.vendorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.vendorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Product domain property code
		
		/// <summary>
		/// Product domain property Id.
		/// </summary>
		public static readonly global::System.Guid ProductDomainPropertyId = new global::System.Guid(0x0945c325, 0x69d8, 0x4687, 0x9b, 0xa0, 0x92, 0x28, 0x3b, 0x53, 0xb2, 0x75);
		
		/// <summary>
		/// Storage for Product
		/// </summary>
		private global::System.String productPropertyStorage = "Prototype";
		
		/// <summary>
		/// Gets or sets the value of Product domain property.
		/// The name of the product the api is part a member. This will form part of the
		/// contract title
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/Product.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/Product.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/Product.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Prototype")]
		[DslModeling::DomainObjectId("0945c325-69d8-4687-9ba0-92283b53b275")]
		public global::System.String Product
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return productPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ProductPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.Product domain property.
		/// </summary>
		internal sealed partial class ProductPropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.String>
		{
			private ProductPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.Product domain property value handler.
			/// </summary>
			public static readonly ProductPropertyHandler Instance = new ProductPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.Product domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ProductDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.productPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.productPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ApiName domain property code
		
		/// <summary>
		/// ApiName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ApiNameDomainPropertyId = new global::System.Guid(0x44a7be5c, 0x2683, 0x4c72, 0xa0, 0x96, 0x41, 0xaa, 0x3d, 0x38, 0xe4, 0x97);
		
		/// <summary>
		/// Storage for ApiName
		/// </summary>
		private global::System.String apiNamePropertyStorage = "Api Name";
		
		/// <summary>
		/// Gets or sets the value of ApiName domain property.
		/// The name of the API. Normally based on the subdomain and/or feature for the API
		/// contract. This will form part of the contract title
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/ApiName.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/ApiName.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/ApiName.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Api Name")]
		[DslModeling::DomainObjectId("44a7be5c-2683-4c72-a096-41aa3d38e497")]
		public global::System.String ApiName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return apiNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ApiNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.ApiName domain property.
		/// </summary>
		internal sealed partial class ApiNamePropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.String>
		{
			private ApiNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.ApiName domain property value handler.
			/// </summary>
			public static readonly ApiNamePropertyHandler Instance = new ApiNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.ApiName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ApiNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.apiNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.apiNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Version domain property code
		
		/// <summary>
		/// Version domain property Id.
		/// </summary>
		public static readonly global::System.Guid VersionDomainPropertyId = new global::System.Guid(0xf55db371, 0x3424, 0x4fca, 0xb2, 0x28, 0x46, 0xd6, 0xbe, 0x5c, 0x73, 0xd4);
		
		/// <summary>
		/// Storage for Version
		/// </summary>
		private global::System.String versionPropertyStorage = "1.0.0";
		
		/// <summary>
		/// Gets or sets the value of Version domain property.
		/// The version of the API contract. This will form part of the contract title
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/Version.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/Version.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/Version.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("1.0.0")]
		[DslModeling::DomainObjectId("f55db371-3424-4fca-b228-46d6be5c73d4")]
		public global::System.String Version
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return versionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				VersionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.Version domain property.
		/// </summary>
		internal sealed partial class VersionPropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.String>
		{
			private VersionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.Version domain property value handler.
			/// </summary>
			public static readonly VersionPropertyHandler Instance = new VersionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.Version domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return VersionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.versionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.versionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Title domain property code
		
		/// <summary>
		/// Title domain property Id.
		/// </summary>
		public static readonly global::System.Guid TitleDomainPropertyId = new global::System.Guid(0xbbbcf9e9, 0x5136, 0x40cd, 0xa5, 0x72, 0x38, 0x98, 0x0d, 0xb0, 0x61, 0x0a);
		
		/// <summary>
		/// Gets or sets the value of Title domain property.
		/// The title of the API. For example Reference Group Data Warehouse.
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/Title.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/Title.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/Title.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("bbbcf9e9-5136-40cd-a572-38980db0610a")]
		public global::System.String Title
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return TitlePropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.Title domain property.
		/// </summary>
		internal sealed partial class TitlePropertyHandler : DslModeling::CalculatedPropertyValueHandler<ApiStudio, global::System.String>
		{
			private TitlePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.Title domain property value handler.
			/// </summary>
			public static readonly TitlePropertyHandler Instance = new TitlePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.Title domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TitleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for Title because its Kind is
				// set to Calculated. Please provide the GetTitleValue()
				// method on the domain class.
				return element.GetTitleValue();
			}
		
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0xd326904b, 0x49e2, 0x4afe, 0xb5, 0xb2, 0xbc, 0x23, 0x7d, 0x67, 0x4f, 0xcb);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = "This is a simple example of common aspects you should consider covering when documenting your API. But, of course, the API documentation can include other topics, and the more information you provide consumers, the faster they can get started.\r\n\r\n## Overview\r\nThe **<API_NAME>** API is organized around RESTful resources. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. You can use the **<API_NAME>** API in test mode, not affecting your live data. The API token you use to authenticate the request determines whether the request is live or test mode.\r\n\r\nThe API supports idempotency for safely retrying requests without performing the same operation twice. This is useful when an API call is disrupted in transit and not receiving a response. For example, if a request to create a charge does not respond due to a network connection error, you can retry the request with the same ETag key to guaranteeing that no more than one charge is created.\r\n\r\nAll **POST** requests accept ETag keys. However, sending ETag keys in **GET** and **DELETE** requests has no effect and should be avoided, as these requests are idempotent by definition.\r\n\r\n## Security\r\nAuthentication to the API is performed via OAuth2. The **<API_NAME>** API uses an Authorization header with each request. Your API token carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth.\r\n\r\n| Name              | Value     |\r\n| ----------------- | --------- |\r\n| **Authorization** | Bearer ***eyJ0eXAiOiJKV1QifQ==.eyJhdWQiOiJhcGktc3R1ZGlvLmlvIn0=.eMiOUrS_qAcfTcChjMmg*** |\r\n\r\nAll API requests must be made over HTTPS. Calls made over plain HTTP will be rejected. In addition, API requests without an Authorization header will be rejected (response 401).\r\n\r\n## Pagination\r\nAll collection API resources support bulk fetches via **GET** requests against a collection resource. The find API methods share a standard structure, taking at least these three parameters: limit and offset.\r\n\r\n## Error\r\n**<API_NAME>** uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the 5xx range indicate an error with Stripe's servers (these are rare).";
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// The value is used as the description for the resource tree and will form part of
		/// the OpenAPI specification
		/// </summary>
		[System.ComponentModel.Editor(typeof(System.ComponentModel.Design.MultilineStringEditor), typeof(System.Drawing.Design.UITypeEditor))]
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/Description.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/Description.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/Description.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("This is a simple example of common aspects you should consider covering when documenting your API. But, of course, the API documentation can include other topics, and the more information you provide consumers, the faster they can get started.\r\n\r\n## Overview\r\nThe **<API_NAME>** API is organized around RESTful resources. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. You can use the **<API_NAME>** API in test mode, not affecting your live data. The API token you use to authenticate the request determines whether the request is live or test mode.\r\n\r\nThe API supports idempotency for safely retrying requests without performing the same operation twice. This is useful when an API call is disrupted in transit and not receiving a response. For example, if a request to create a charge does not respond due to a network connection error, you can retry the request with the same ETag key to guaranteeing that no more than one charge is created.\r\n\r\nAll **POST** requests accept ETag keys. However, sending ETag keys in **GET** and **DELETE** requests has no effect and should be avoided, as these requests are idempotent by definition.\r\n\r\n## Security\r\nAuthentication to the API is performed via OAuth2. The **<API_NAME>** API uses an Authorization header with each request. Your API token carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth.\r\n\r\n| Name              | Value     |\r\n| ----------------- | --------- |\r\n| **Authorization** | Bearer ***eyJ0eXAiOiJKV1QifQ==.eyJhdWQiOiJhcGktc3R1ZGlvLmlvIn0=.eMiOUrS_qAcfTcChjMmg*** |\r\n\r\nAll API requests must be made over HTTPS. Calls made over plain HTTP will be rejected. In addition, API requests without an Authorization header will be rejected (response 401).\r\n\r\n## Pagination\r\nAll collection API resources support bulk fetches via **GET** requests against a collection resource. The find API methods share a standard structure, taking at least these three parameters: limit and offset.\r\n\r\n## Error\r\n**<API_NAME>** uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the 5xx range indicate an error with Stripe's servers (these are rare).")]
		[DslModeling::DomainObjectId("d326904b-49e2-4afe-b5b2-bc237d674fcb")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ContactUrl domain property code
		
		/// <summary>
		/// ContactUrl domain property Id.
		/// </summary>
		public static readonly global::System.Guid ContactUrlDomainPropertyId = new global::System.Guid(0xfae6e846, 0x4cfe, 0x42bc, 0x8c, 0xcb, 0x83, 0xe9, 0x49, 0xc4, 0x27, 0xc9);
		
		/// <summary>
		/// Storage for ContactUrl
		/// </summary>
		private global::System.String contactUrlPropertyStorage = "http://api.api-studio.io/";
		
		/// <summary>
		/// Gets or sets the value of ContactUrl domain property.
		/// The url which provides additional information about the solution or team
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/ContactUrl.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/ContactUrl.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/ContactUrl.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("http://api.api-studio.io/")]
		[DslModeling::DomainObjectId("fae6e846-4cfe-42bc-8ccb-83e949c427c9")]
		public global::System.String ContactUrl
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return contactUrlPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ContactUrlPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.ContactUrl domain property.
		/// </summary>
		internal sealed partial class ContactUrlPropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.String>
		{
			private ContactUrlPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.ContactUrl domain property value handler.
			/// </summary>
			public static readonly ContactUrlPropertyHandler Instance = new ContactUrlPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.ContactUrl domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ContactUrlDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.contactUrlPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.contactUrlPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ContactName domain property code
		
		/// <summary>
		/// ContactName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ContactNameDomainPropertyId = new global::System.Guid(0x160e9f7e, 0x0d9a, 0x47ae, 0xaf, 0x2c, 0xf0, 0x42, 0xa1, 0xd6, 0x7f, 0x68);
		
		/// <summary>
		/// Storage for ContactName
		/// </summary>
		private global::System.String contactNamePropertyStorage = "Azure Function (ApiStudio)";
		
		/// <summary>
		/// Gets or sets the value of ContactName domain property.
		/// The name of the solution provider e.g. team, shared mail, etc..
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/ContactName.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/ContactName.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/ContactName.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Azure Function (ApiStudio)")]
		[DslModeling::DomainObjectId("160e9f7e-0d9a-47ae-af2c-f042a1d67f68")]
		public global::System.String ContactName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return contactNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ContactNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.ContactName domain property.
		/// </summary>
		internal sealed partial class ContactNamePropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.String>
		{
			private ContactNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.ContactName domain property value handler.
			/// </summary>
			public static readonly ContactNamePropertyHandler Instance = new ContactNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.ContactName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ContactNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.contactNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.contactNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Audience domain property code
		
		/// <summary>
		/// Audience domain property Id.
		/// </summary>
		public static readonly global::System.Guid AudienceDomainPropertyId = new global::System.Guid(0xcdca44e3, 0x36ba, 0x4620, 0xba, 0xf8, 0xb6, 0x28, 0x09, 0x51, 0x59, 0xef);
		
		/// <summary>
		/// Storage for Audience
		/// </summary>
		private HttpApiAudienceTypes audiencePropertyStorage = HttpApiAudienceTypes.Private;
		
		/// <summary>
		/// Gets or sets the value of Audience domain property.
		/// The audience category flags if the consumers are Private (Internal), Partner
		/// (Trusted/VPN), Public (Public Domain)
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/Audience.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/Audience.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/Audience.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(HttpApiAudienceTypes.Private)]
		[DslModeling::DomainObjectId("cdca44e3-36ba-4620-baf8-b628095159ef")]
		public HttpApiAudienceTypes Audience
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return audiencePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				AudiencePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.Audience domain property.
		/// </summary>
		internal sealed partial class AudiencePropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, HttpApiAudienceTypes>
		{
			private AudiencePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.Audience domain property value handler.
			/// </summary>
			public static readonly AudiencePropertyHandler Instance = new AudiencePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.Audience domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return AudienceDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed HttpApiAudienceTypes GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.audiencePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, HttpApiAudienceTypes newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				HttpApiAudienceTypes oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.audiencePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region InitialResourceIsRoot domain property code
		
		/// <summary>
		/// InitialResourceIsRoot domain property Id.
		/// </summary>
		public static readonly global::System.Guid InitialResourceIsRootDomainPropertyId = new global::System.Guid(0xa6280a94, 0x1043, 0x4440, 0xa0, 0x34, 0x8a, 0xe8, 0x7b, 0xff, 0x0b, 0x42);
		
		/// <summary>
		/// Storage for InitialResourceIsRoot
		/// </summary>
		private global::System.Boolean initialResourceIsRootPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of InitialResourceIsRoot domain property.
		/// Determine if the first resource in the resource tree (uri) is used as the root
		/// uri e.g. "/" or "/accounts"
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/InitialResourceIsRoot.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/InitialResourceIsRoot.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/InitialResourceIsRoot.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a6280a94-1043-4440-a034-8ae87bff0b42")]
		public global::System.Boolean InitialResourceIsRoot
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return initialResourceIsRootPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				InitialResourceIsRootPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.InitialResourceIsRoot domain property.
		/// </summary>
		internal sealed partial class InitialResourceIsRootPropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.Boolean>
		{
			private InitialResourceIsRootPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.InitialResourceIsRoot domain property value handler.
			/// </summary>
			public static readonly InitialResourceIsRootPropertyHandler Instance = new InitialResourceIsRootPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.InitialResourceIsRoot domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return InitialResourceIsRootDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.initialResourceIsRootPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.initialResourceIsRootPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SecurityApiKey domain property code
		
		/// <summary>
		/// SecurityApiKey domain property Id.
		/// </summary>
		public static readonly global::System.Guid SecurityApiKeyDomainPropertyId = new global::System.Guid(0x5c9bccd9, 0x1593, 0x4db8, 0x81, 0x9f, 0x4c, 0xa5, 0xe8, 0x4e, 0xc0, 0x2b);
		
		/// <summary>
		/// Storage for SecurityApiKey
		/// </summary>
		private global::System.String securityApiKeyPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of SecurityApiKey domain property.
		/// An internal server error. The response body may contain error messages.
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/SecurityApiKey.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/SecurityApiKey.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/SecurityApiKey.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("")]
		[DslModeling::DomainObjectId("5c9bccd9-1593-4db8-819f-4ca5e84ec02b")]
		public global::System.String SecurityApiKey
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return securityApiKeyPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SecurityApiKeyPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.SecurityApiKey domain property.
		/// </summary>
		internal sealed partial class SecurityApiKeyPropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, global::System.String>
		{
			private SecurityApiKeyPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.SecurityApiKey domain property value handler.
			/// </summary>
			public static readonly SecurityApiKeyPropertyHandler Instance = new SecurityApiKeyPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.SecurityApiKey domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SecurityApiKeyDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.securityApiKeyPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.securityApiKeyPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SecuritySchemeType domain property code
		
		/// <summary>
		/// SecuritySchemeType domain property Id.
		/// </summary>
		public static readonly global::System.Guid SecuritySchemeTypeDomainPropertyId = new global::System.Guid(0x5cdeda70, 0x33b7, 0x4040, 0xbf, 0x31, 0x78, 0xdf, 0x6b, 0xac, 0xe7, 0x62);
		
		/// <summary>
		/// Storage for SecuritySchemeType
		/// </summary>
		private SecuritySchemeTypes securitySchemeTypePropertyStorage = SecuritySchemeTypes.None;
		
		/// <summary>
		/// Gets or sets the value of SecuritySchemeType domain property.
		/// APIs use authorization to ensure that client requests access data securely. This
		/// can involve authenticating the sender of a request and verifying that they have
		/// permission to access or manipulate the relevant data. If you're building an API,
		/// you can choose from a variety of auth models.
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ApiStudio/SecuritySchemeType.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ApiStudio/SecuritySchemeType.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ApiStudio/SecuritySchemeType.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(SecuritySchemeTypes.None)]
		[DslModeling::DomainObjectId("5cdeda70-33b7-4040-bf31-78df6bace762")]
		public SecuritySchemeTypes SecuritySchemeType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return securitySchemeTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SecuritySchemeTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ApiStudio.SecuritySchemeType domain property.
		/// </summary>
		internal sealed partial class SecuritySchemeTypePropertyHandler : DslModeling::DomainPropertyValueHandler<ApiStudio, SecuritySchemeTypes>
		{
			private SecuritySchemeTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ApiStudio.SecuritySchemeType domain property value handler.
			/// </summary>
			public static readonly SecuritySchemeTypePropertyHandler Instance = new SecuritySchemeTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ApiStudio.SecuritySchemeType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SecuritySchemeTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed SecuritySchemeTypes GetValue(ApiStudio element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.securitySchemeTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ApiStudio element, SecuritySchemeTypes newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				SecuritySchemeTypes oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.securitySchemeTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Resourced opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Resourced.
		/// Description for ApiStudioIO.ApiStudioHasResourced.ApiStudio
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Resource> Resourced
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Resource>, Resource>(global::ApiStudioIO.ApiStudioHasResourced.ApiStudioDomainRoleId);
			}
		}
		#endregion
		#region Apis opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Apis.
		/// Description for ApiStudioIO.ApiStudioHasApis.ApiStudio
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Api> Apis
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Api>, Api>(global::ApiStudioIO.ApiStudioHasApis.ApiStudioDomainRoleId);
			}
		}
		#endregion
		#region DataModeled opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DataModeled.
		/// Description for ApiStudioIO.ApiStudioHasDataModeled.ApiStudio
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DataModel> DataModeled
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DataModel>, DataModel>(global::ApiStudioIO.ApiStudioHasDataModeled.ApiStudioDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::ApiStudioIO.Resource.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::ApiStudioIO.Api.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::ApiStudioIO.DataModel.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::ApiStudioIO.Resource sourceResource1 = sourceElement as global::ApiStudioIO.Resource;
			if (sourceResource1 != null)
			{
				// Create link for path ApiStudioHasResourced.Resourced
				this.Resourced.Add(sourceResource1);

				return;
			}
				
			global::ApiStudioIO.Api sourceApi2 = sourceElement as global::ApiStudioIO.Api;
			if (sourceApi2 != null)
			{
				// Create link for path ApiStudioHasApis.Apis
				this.Apis.Add(sourceApi2);

				return;
			}
				
			global::ApiStudioIO.DataModel sourceDataModel3 = sourceElement as global::ApiStudioIO.DataModel;
			if (sourceDataModel3 != null)
			{
				// Create link for path ApiStudioHasDataModeled.DataModeled
				this.DataModeled.Add(sourceDataModel3);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::ApiStudioIO.Resource sourceResource1 = sourceElement as global::ApiStudioIO.Resource;
			if (sourceResource1 != null)
			{
				// Delete link for path ApiStudioHasResourced.Resourced
				
				foreach (DslModeling::ElementLink link in global::ApiStudioIO.ApiStudioHasResourced.GetLinks((global::ApiStudioIO.ApiStudio)this, sourceResource1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::ApiStudioIO.ApiStudioHasResourced.ApiStudioDomainRoleId, global::ApiStudioIO.ApiStudioHasResourced.ResourceDomainRoleId);
				}

				return;
			}
				
			global::ApiStudioIO.Api sourceApi2 = sourceElement as global::ApiStudioIO.Api;
			if (sourceApi2 != null)
			{
				// Delete link for path ApiStudioHasApis.Apis
				
				foreach (DslModeling::ElementLink link in global::ApiStudioIO.ApiStudioHasApis.GetLinks((global::ApiStudioIO.ApiStudio)this, sourceApi2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::ApiStudioIO.ApiStudioHasApis.ApiStudioDomainRoleId, global::ApiStudioIO.ApiStudioHasApis.ApiDomainRoleId);
				}

				return;
			}
				
			global::ApiStudioIO.DataModel sourceDataModel3 = sourceElement as global::ApiStudioIO.DataModel;
			if (sourceDataModel3 != null)
			{
				// Delete link for path ApiStudioHasDataModeled.DataModeled
				
				foreach (DslModeling::ElementLink link in global::ApiStudioIO.ApiStudioHasDataModeled.GetLinks((global::ApiStudioIO.ApiStudio)this, sourceDataModel3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::ApiStudioIO.ApiStudioHasDataModeled.ApiStudioDomainRoleId, global::ApiStudioIO.ApiStudioHasDataModeled.DataModelDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass Resource
	/// Elements embedded in the model. Appear as boxes on the diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.Resource.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.Resource.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("8f3da64b-6647-4840-b424-db6023a735be")]
	public abstract partial class Resource : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Resource domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8f3da64b, 0x6647, 0x4840, 0xb4, 0x24, 0xdb, 0x60, 0x23, 0xa7, 0x35, 0xbe);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Resource(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x03af69d1, 0xf9d2, 0x49c1, 0x93, 0xbf, 0xfa, 0x28, 0xaf, 0x94, 0x94, 0x04);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// The name of a given resource. This name form part of the uri structure.
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.Resource/Name.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.Resource/Name.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.Resource/Name.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("03af69d1-f9d2-49c1-93bf-fa28af949404")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Resource.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Resource, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Resource.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Resource.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Resource element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Resource element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region HttpApiUri domain property code
		
		/// <summary>
		/// HttpApiUri domain property Id.
		/// </summary>
		public static readonly global::System.Guid HttpApiUriDomainPropertyId = new global::System.Guid(0xdb19658e, 0x1079, 0x4252, 0xa6, 0xf9, 0xf7, 0x30, 0xdd, 0x55, 0x72, 0xa8);
		
		/// <summary>
		/// Gets or sets the value of HttpApiUri domain property.
		/// Calculated field build from the resource relationship path
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.Resource/HttpApiUri.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.Resource/HttpApiUri.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.Resource/HttpApiUri.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("db19658e-1079-4252-a6f9-f730dd5572a8")]
		public global::System.String HttpApiUri
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return HttpApiUriPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Resource.HttpApiUri domain property.
		/// </summary>
		internal sealed partial class HttpApiUriPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Resource, global::System.String>
		{
			private HttpApiUriPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Resource.HttpApiUri domain property value handler.
			/// </summary>
			public static readonly HttpApiUriPropertyHandler Instance = new HttpApiUriPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Resource.HttpApiUri domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return HttpApiUriDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Resource element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for HttpApiUri because its Kind is
				// set to Calculated. Please provide the GetHttpApiUriValue()
				// method on the domain class.
				return element.GetHttpApiUriValue();
			}
		
		}
		
		#endregion
		#region Resources opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Resources.
		/// Description for ApiStudioIO.ResourceReferencesResources.SourceResource
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Resource> Resources
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Resource>, Resource>(global::ApiStudioIO.ResourceReferencesResources.SourceResourceDomainRoleId);
			}
		}
		#endregion
		#region SourceResource opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceResource.
		/// Description for ApiStudioIO.ResourceReferencesResources.TargetResource
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Resource> SourceResource
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Resource>, Resource>(global::ApiStudioIO.ResourceReferencesResources.TargetResourceDomainRoleId);
			}
		}
		#endregion
		#region Apis opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Apis.
		/// Description for ApiStudioIO.ResourceReferencesApis.Resource
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Api> Apis
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Api>, Api>(global::ApiStudioIO.ResourceReferencesApis.ResourceDomainRoleId);
			}
		}
		#endregion
		#region ApiStudio opposite domain role accessor
		/// <summary>
		/// Gets or sets ApiStudio.
		/// Description for ApiStudioIO.ApiStudioHasResourced.Resource
		/// </summary>
		public virtual ApiStudio ApiStudio
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ApiStudioIO.ApiStudioHasResourced.ResourceDomainRoleId) as ApiStudio;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ApiStudioIO.ApiStudioHasResourced.ResourceDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass ResourceInstance
	/// A instance resource is a singular concept that is akin to an object instance or
	/// database record. In REST, you can view it as a single resource inside resource
	/// collection. A document’s state representation typically includes both fields
	/// with values and links to other related resources.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.ResourceInstance.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.ResourceInstance.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("f3e51359-b5a8-464c-958d-ab9ac499294f")]
	public partial class ResourceInstance : Resource
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ResourceInstance domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf3e51359, 0xb5a8, 0x464c, 0x95, 0x8d, 0xab, 0x9a, 0xc4, 0x99, 0x29, 0x4f);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ResourceInstance(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ResourceInstance(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region InstanceIdentity domain property code
		
		/// <summary>
		/// InstanceIdentity domain property Id.
		/// </summary>
		public static readonly global::System.Guid InstanceIdentityDomainPropertyId = new global::System.Guid(0xe93cc319, 0x2b6b, 0x4c3c, 0x8e, 0x82, 0xe9, 0x4c, 0xdb, 0x5f, 0xf7, 0xb7);
		
		/// <summary>
		/// Storage for InstanceIdentity
		/// </summary>
		private global::System.String instanceIdentityPropertyStorage = "InstanceCode";
		
		/// <summary>
		/// Gets or sets the value of InstanceIdentity domain property.
		/// A unique, immutable identifier that identifies a resource
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ResourceInstance/InstanceIdentity.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ResourceInstance/InstanceIdentity.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ResourceInstance/InstanceIdentity.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("InstanceCode")]
		[DslModeling::DomainObjectId("e93cc319-2b6b-4c3c-8e82-e94cdb5ff7b7")]
		public global::System.String InstanceIdentity
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return instanceIdentityPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				InstanceIdentityPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ResourceInstance.InstanceIdentity domain property.
		/// </summary>
		internal sealed partial class InstanceIdentityPropertyHandler : DslModeling::DomainPropertyValueHandler<ResourceInstance, global::System.String>
		{
			private InstanceIdentityPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ResourceInstance.InstanceIdentity domain property value handler.
			/// </summary>
			public static readonly InstanceIdentityPropertyHandler Instance = new InstanceIdentityPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ResourceInstance.InstanceIdentity domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return InstanceIdentityDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ResourceInstance element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.instanceIdentityPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ResourceInstance element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.instanceIdentityPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region InstanceDescription domain property code
		
		/// <summary>
		/// InstanceDescription domain property Id.
		/// </summary>
		public static readonly global::System.Guid InstanceDescriptionDomainPropertyId = new global::System.Guid(0xa07297f6, 0x9a34, 0x420e, 0x93, 0xa4, 0xd2, 0x95, 0xbc, 0x41, 0x84, 0xd3);
		
		/// <summary>
		/// Storage for InstanceDescription
		/// </summary>
		private global::System.String instanceDescriptionPropertyStorage = "A unique, immutable identifier that identifies a resource";
		
		/// <summary>
		/// Gets or sets the value of InstanceDescription domain property.
		/// The description associated to the unique code used to help 3rd parties identify
		/// the value
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ResourceInstance/InstanceDescription.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ResourceInstance/InstanceDescription.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ResourceInstance/InstanceDescription.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("A unique, immutable identifier that identifies a resource")]
		[DslModeling::DomainObjectId("a07297f6-9a34-420e-93a4-d295bc4184d3")]
		public global::System.String InstanceDescription
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return instanceDescriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				InstanceDescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ResourceInstance.InstanceDescription domain property.
		/// </summary>
		internal sealed partial class InstanceDescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<ResourceInstance, global::System.String>
		{
			private InstanceDescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ResourceInstance.InstanceDescription domain property value handler.
			/// </summary>
			public static readonly InstanceDescriptionPropertyHandler Instance = new InstanceDescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ResourceInstance.InstanceDescription domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return InstanceDescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ResourceInstance element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.instanceDescriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ResourceInstance element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.instanceDescriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region InstanceDataType domain property code
		
		/// <summary>
		/// InstanceDataType domain property Id.
		/// </summary>
		public static readonly global::System.Guid InstanceDataTypeDomainPropertyId = new global::System.Guid(0x614d1655, 0xe0e5, 0x48a8, 0xb0, 0x52, 0x12, 0x09, 0xe2, 0x06, 0x6a, 0x67);
		
		/// <summary>
		/// Storage for InstanceDataType
		/// </summary>
		private global::System.String instanceDataTypePropertyStorage = "Guid";
		
		/// <summary>
		/// Gets or sets the value of InstanceDataType domain property.
		/// The data type for the unique code parameter
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ResourceInstance/InstanceDataType.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ResourceInstance/InstanceDataType.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ResourceInstance/InstanceDataType.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Guid")]
		[DslModeling::DomainObjectId("614d1655-e0e5-48a8-b052-1209e2066a67")]
		public global::System.String InstanceDataType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return instanceDataTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				InstanceDataTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ResourceInstance.InstanceDataType domain property.
		/// </summary>
		internal sealed partial class InstanceDataTypePropertyHandler : DslModeling::DomainPropertyValueHandler<ResourceInstance, global::System.String>
		{
			private InstanceDataTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ResourceInstance.InstanceDataType domain property value handler.
			/// </summary>
			public static readonly InstanceDataTypePropertyHandler Instance = new InstanceDataTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ResourceInstance.InstanceDataType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return InstanceDataTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ResourceInstance element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.instanceDataTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ResourceInstance element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.instanceDataTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass ResourceCollection
	/// A collection resource is a server-managed directory of resources. Clients may
	/// propose new resources to be added to a collection. However, it is up to the
	/// collection to choose to create a new resource, or not. A collection resource
	/// chooses what it wants to contain and also decides the URIs of each contained
	/// resource.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.ResourceCollection.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.ResourceCollection.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("3e516750-e711-4e8c-86e2-711c232b8e15")]
	public partial class ResourceCollection : Resource
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ResourceCollection domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3e516750, 0xe711, 0x4e8c, 0x86, 0xe2, 0x71, 0x1c, 0x23, 0x2b, 0x8e, 0x15);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ResourceCollection(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ResourceCollection(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region UsePagination domain property code
		
		/// <summary>
		/// UsePagination domain property Id.
		/// </summary>
		public static readonly global::System.Guid UsePaginationDomainPropertyId = new global::System.Guid(0x8ad628a5, 0x9969, 0x4e5e, 0xb5, 0x67, 0x72, 0x6b, 0xc4, 0x9b, 0xd2, 0xce);
		
		/// <summary>
		/// Storage for UsePagination
		/// </summary>
		private global::System.Boolean usePaginationPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of UsePagination domain property.
		/// Use limit and offset parameters to paginate records in a GET request. Note that
		/// offset i returns record i+1 as the first record in the set (for example, offset
		/// = 0 returns record 1 as the first record in the set, offset =10 returns record
		/// 11 as the first record in the set, and so forth).
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ResourceCollection/UsePagination.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ResourceCollection/UsePagination.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ResourceCollection/UsePagination.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8ad628a5-9969-4e5e-b567-726bc49bd2ce")]
		public global::System.Boolean UsePagination
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return usePaginationPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				UsePaginationPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ResourceCollection.UsePagination domain property.
		/// </summary>
		internal sealed partial class UsePaginationPropertyHandler : DslModeling::DomainPropertyValueHandler<ResourceCollection, global::System.Boolean>
		{
			private UsePaginationPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ResourceCollection.UsePagination domain property value handler.
			/// </summary>
			public static readonly UsePaginationPropertyHandler Instance = new UsePaginationPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ResourceCollection.UsePagination domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return UsePaginationDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ResourceCollection element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.usePaginationPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ResourceCollection element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.usePaginationPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region UseSorting domain property code
		
		/// <summary>
		/// UseSorting domain property Id.
		/// </summary>
		public static readonly global::System.Guid UseSortingDomainPropertyId = new global::System.Guid(0xd3d71817, 0x0541, 0x45d9, 0x8f, 0x07, 0x61, 0xe0, 0x59, 0xc7, 0xe1, 0x29);
		
		/// <summary>
		/// Storage for UseSorting
		/// </summary>
		private global::System.Boolean useSortingPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of UseSorting domain property.
		/// Sorting is determined through the use of the ‘sort’ query string parameter. The
		/// value of this parameter is a comma-separated list of sort keys. Sort directions
		/// can optionally be appended to each sort key, separated by the ‘:’ character. The
		/// supported sort directions are either ‘asc’ for ascending or ‘desc’ for
		/// descending. The caller may (but is not required to) specify a sort direction for
		/// each key. If a sort direction is not specified for a key, then a default is set
		/// by the server
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.ResourceCollection/UseSorting.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.ResourceCollection/UseSorting.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.ResourceCollection/UseSorting.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d3d71817-0541-45d9-8f07-61e059c7e129")]
		public global::System.Boolean UseSorting
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return useSortingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				UseSortingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ResourceCollection.UseSorting domain property.
		/// </summary>
		internal sealed partial class UseSortingPropertyHandler : DslModeling::DomainPropertyValueHandler<ResourceCollection, global::System.Boolean>
		{
			private UseSortingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ResourceCollection.UseSorting domain property value handler.
			/// </summary>
			public static readonly UseSortingPropertyHandler Instance = new UseSortingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ResourceCollection.UseSorting domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return UseSortingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ResourceCollection element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.useSortingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ResourceCollection element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.useSortingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApi
	/// Description for ApiStudioIO.HttpApi
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApi.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("f3c5c6fd-b7e3-489c-b50c-f59bc5ac90f0")]
	public abstract partial class HttpApi : Api
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApi domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf3c5c6fd, 0xb7e3, 0x489c, 0xb5, 0x0c, 0xf5, 0x9b, 0xc5, 0xac, 0x90, 0xf0);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected HttpApi(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0xf01c0ff4, 0x98f0, 0x47f3, 0xa2, 0xc3, 0x16, 0x65, 0xd2, 0x1b, 0x62, 0x74);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = "This is a description of the rest verbs actions";
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// The description which will be published for this Rest Resource. The description
		/// should be helpful for 3rd parties to understand the purpose of the operation
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi/Description.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApi/Description.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApi/Description.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("This is a description of the rest verbs actions")]
		[DslModeling::DomainObjectId("f01c0ff4-98f0-47f3-a2c3-1665d21b6274")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApi.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApi, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApi.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApi.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApi element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApi element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region AuthorisationRole domain property code
		
		/// <summary>
		/// AuthorisationRole domain property Id.
		/// </summary>
		public static readonly global::System.Guid AuthorisationRoleDomainPropertyId = new global::System.Guid(0x1c2f46ab, 0x1966, 0x4f03, 0xb6, 0xe3, 0xd4, 0xa1, 0x16, 0xb9, 0x53, 0x2a);
		
		/// <summary>
		/// Gets or sets the value of AuthorisationRole domain property.
		/// Which parties are able to use this resoure
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi/AuthorisationRole.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApi/AuthorisationRole.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApi/AuthorisationRole.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Product.Subject.Action")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("1c2f46ab-1966-4f03-b6e3-d4a116b9532a")]
		public global::System.String AuthorisationRole
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return AuthorisationRolePropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApi.AuthorisationRole domain property.
		/// </summary>
		internal sealed partial class AuthorisationRolePropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApi, global::System.String>
		{
			private AuthorisationRolePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApi.AuthorisationRole domain property value handler.
			/// </summary>
			public static readonly AuthorisationRolePropertyHandler Instance = new AuthorisationRolePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApi.AuthorisationRole domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return AuthorisationRoleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApi element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for AuthorisationRole because its Kind is
				// set to Calculated. Please provide the GetAuthorisationRoleValue()
				// method on the domain class.
				return element.GetAuthorisationRoleValue();
			}
		
		}
		
		#endregion
		#region HttpVerb domain property code
		
		/// <summary>
		/// HttpVerb domain property Id.
		/// </summary>
		public static readonly global::System.Guid HttpVerbDomainPropertyId = new global::System.Guid(0x7e555ff3, 0xfb88, 0x4735, 0x82, 0x73, 0xbf, 0x11, 0x0d, 0x26, 0xb0, 0x07);
		
		/// <summary>
		/// Gets or sets the value of HttpVerb domain property.
		/// The HTTP verb which is used by this Rest Resource
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi/HttpVerb.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApi/HttpVerb.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApi/HttpVerb.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("NotSet")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("7e555ff3-fb88-4735-8273-bf110d26b007")]
		public global::System.String HttpVerb
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return HttpVerbPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApi.HttpVerb domain property.
		/// </summary>
		internal sealed partial class HttpVerbPropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApi, global::System.String>
		{
			private HttpVerbPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApi.HttpVerb domain property value handler.
			/// </summary>
			public static readonly HttpVerbPropertyHandler Instance = new HttpVerbPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApi.HttpVerb domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return HttpVerbDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApi element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for HttpVerb because its Kind is
				// set to Calculated. Please provide the GetHttpVerbValue()
				// method on the domain class.
				return element.GetHttpVerbValue();
			}
		
		}
		
		#endregion
		#region RequestParameters domain property code
		
		/// <summary>
		/// RequestParameters domain property Id.
		/// </summary>
		public static readonly global::System.Guid RequestParametersDomainPropertyId = new global::System.Guid(0x0b0bd3d5, 0x7c95, 0x4964, 0xb5, 0x44, 0xb9, 0x0c, 0xd4, 0xaf, 0x96, 0xf8);
		
		/// <summary>
		/// Gets or sets the value of RequestParameters domain property.
		/// API parameter collection for the RESTFul resource
		/// </summary>
		[System.ComponentModel.Editor(typeof(ApiStudioComponentUITypeEditor<HttpApi, ApiStudioComponentParameter>), typeof(System.Drawing.Design.UITypeEditor))]
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi/RequestParameters.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApi/RequestParameters.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApi/RequestParameters.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("0b0bd3d5-7c95-4964-b544-b90cd4af96f8")]
		public global::System.Collections.Generic.List<ApiStudioComponentParameter> RequestParameters
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return RequestParametersPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApi.RequestParameters domain property.
		/// </summary>
		internal sealed partial class RequestParametersPropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApi, global::System.Collections.Generic.List<ApiStudioComponentParameter>>
		{
			private RequestParametersPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApi.RequestParameters domain property value handler.
			/// </summary>
			public static readonly RequestParametersPropertyHandler Instance = new RequestParametersPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApi.RequestParameters domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return RequestParametersDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Collections.Generic.List<ApiStudioComponentParameter> GetValue(HttpApi element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for RequestParameters because its Kind is
				// set to Calculated. Please provide the GetRequestParametersValue()
				// method on the domain class.
				return element.GetRequestParametersValue();
			}
		
		}
		
		#endregion
		#region ResponseStatusCodes domain property code
		
		/// <summary>
		/// ResponseStatusCodes domain property Id.
		/// </summary>
		public static readonly global::System.Guid ResponseStatusCodesDomainPropertyId = new global::System.Guid(0x525d924f, 0x4072, 0x47a0, 0xb7, 0x4c, 0xb1, 0x50, 0xfd, 0x8a, 0x11, 0xa2);
		
		/// <summary>
		/// Gets or sets the value of ResponseStatusCodes domain property.
		/// Valid HTTP status codes which provide from the HTTP Api
		/// </summary>
		[System.ComponentModel.Editor(typeof(ApiStudioComponentUITypeEditor<HttpApi, ApiStudioComponentResponseStatusCode>), typeof(System.Drawing.Design.UITypeEditor))]
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi/ResponseStatusCodes.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApi/ResponseStatusCodes.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApi/ResponseStatusCodes.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("525d924f-4072-47a0-b74c-b150fd8a11a2")]
		public global::System.Collections.Generic.List<ApiStudioComponentResponseStatusCode> ResponseStatusCodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return ResponseStatusCodesPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApi.ResponseStatusCodes domain property.
		/// </summary>
		internal sealed partial class ResponseStatusCodesPropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApi, global::System.Collections.Generic.List<ApiStudioComponentResponseStatusCode>>
		{
			private ResponseStatusCodesPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApi.ResponseStatusCodes domain property value handler.
			/// </summary>
			public static readonly ResponseStatusCodesPropertyHandler Instance = new ResponseStatusCodesPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApi.ResponseStatusCodes domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ResponseStatusCodesDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Collections.Generic.List<ApiStudioComponentResponseStatusCode> GetValue(HttpApi element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for ResponseStatusCodes because its Kind is
				// set to Calculated. Please provide the GetResponseStatusCodesValue()
				// method on the domain class.
				return element.GetResponseStatusCodesValue();
			}
		
		}
		
		#endregion
		#region ResponseMediaTypes domain property code
		
		/// <summary>
		/// ResponseMediaTypes domain property Id.
		/// </summary>
		public static readonly global::System.Guid ResponseMediaTypesDomainPropertyId = new global::System.Guid(0xcae73e7a, 0x8e11, 0x444f, 0xbe, 0x69, 0xb4, 0xa5, 0x5d, 0x76, 0xea, 0xb6);
		
		/// <summary>
		/// Gets or sets the value of ResponseMediaTypes domain property.
		/// API output media type collection for the HTTP Api
		/// </summary>
		[System.ComponentModel.Editor(typeof(ApiStudioComponentUITypeEditor<HttpApi, ApiStudioComponentMediaTypeResponse>), typeof(System.Drawing.Design.UITypeEditor))]
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi/ResponseMediaTypes.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApi/ResponseMediaTypes.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApi/ResponseMediaTypes.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("cae73e7a-8e11-444f-be69-b4a55d76eab6")]
		public global::System.Collections.Generic.List<ApiStudioComponentMediaTypeResponse> ResponseMediaTypes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return ResponseMediaTypesPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApi.ResponseMediaTypes domain property.
		/// </summary>
		internal sealed partial class ResponseMediaTypesPropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApi, global::System.Collections.Generic.List<ApiStudioComponentMediaTypeResponse>>
		{
			private ResponseMediaTypesPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApi.ResponseMediaTypes domain property value handler.
			/// </summary>
			public static readonly ResponseMediaTypesPropertyHandler Instance = new ResponseMediaTypesPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApi.ResponseMediaTypes domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ResponseMediaTypesDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Collections.Generic.List<ApiStudioComponentMediaTypeResponse> GetValue(HttpApi element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for ResponseMediaTypes because its Kind is
				// set to Calculated. Please provide the GetResponseMediaTypesValue()
				// method on the domain class.
				return element.GetResponseMediaTypesValue();
			}
		
		}
		
		#endregion
		#region RequestMediaTypes domain property code
		
		/// <summary>
		/// RequestMediaTypes domain property Id.
		/// </summary>
		public static readonly global::System.Guid RequestMediaTypesDomainPropertyId = new global::System.Guid(0x54f44c42, 0x8781, 0x4bbc, 0x85, 0xbc, 0xa9, 0xcd, 0x05, 0x28, 0xf4, 0x56);
		
		/// <summary>
		/// Gets or sets the value of RequestMediaTypes domain property.
		/// API input media type collection for the HTTP Api
		/// </summary>
		[System.ComponentModel.Editor(typeof(ApiStudioComponentUITypeEditor<HttpApi, ApiStudioComponentMediaTypeRequest>), typeof(System.Drawing.Design.UITypeEditor))]
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi/RequestMediaTypes.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApi/RequestMediaTypes.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApi/RequestMediaTypes.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("54f44c42-8781-4bbc-85bc-a9cd0528f456")]
		public global::System.Collections.Generic.List<ApiStudioComponentMediaTypeRequest> RequestMediaTypes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return RequestMediaTypesPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApi.RequestMediaTypes domain property.
		/// </summary>
		internal sealed partial class RequestMediaTypesPropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApi, global::System.Collections.Generic.List<ApiStudioComponentMediaTypeRequest>>
		{
			private RequestMediaTypesPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApi.RequestMediaTypes domain property value handler.
			/// </summary>
			public static readonly RequestMediaTypesPropertyHandler Instance = new RequestMediaTypesPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApi.RequestMediaTypes domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return RequestMediaTypesDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Collections.Generic.List<ApiStudioComponentMediaTypeRequest> GetValue(HttpApi element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for RequestMediaTypes because its Kind is
				// set to Calculated. Please provide the GetRequestMediaTypesValue()
				// method on the domain class.
				return element.GetRequestMediaTypesValue();
			}
		
		}
		
		#endregion
		#region ResponseHeaders domain property code
		
		/// <summary>
		/// ResponseHeaders domain property Id.
		/// </summary>
		public static readonly global::System.Guid ResponseHeadersDomainPropertyId = new global::System.Guid(0xad456fa9, 0x3544, 0x4337, 0xb8, 0x8f, 0xdd, 0xaa, 0x34, 0xd6, 0x9d, 0xdd);
		
		/// <summary>
		/// Gets or sets the value of ResponseHeaders domain property.
		/// API headers for the outbound HTTP Api
		/// </summary>
		[System.ComponentModel.Editor(typeof(ApiStudioComponentUITypeEditor<HttpApi, ApiStudioComponentHeaderResponse>), typeof(System.Drawing.Design.UITypeEditor))]
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi/ResponseHeaders.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApi/ResponseHeaders.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApi/ResponseHeaders.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("ad456fa9-3544-4337-b88f-ddaa34d69ddd")]
		public global::System.Collections.Generic.List<ApiStudioComponentHeaderResponse> ResponseHeaders
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return ResponseHeadersPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApi.ResponseHeaders domain property.
		/// </summary>
		internal sealed partial class ResponseHeadersPropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApi, global::System.Collections.Generic.List<ApiStudioComponentHeaderResponse>>
		{
			private ResponseHeadersPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApi.ResponseHeaders domain property value handler.
			/// </summary>
			public static readonly ResponseHeadersPropertyHandler Instance = new ResponseHeadersPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApi.ResponseHeaders domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ResponseHeadersDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Collections.Generic.List<ApiStudioComponentHeaderResponse> GetValue(HttpApi element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for ResponseHeaders because its Kind is
				// set to Calculated. Please provide the GetResponseHeadersValue()
				// method on the domain class.
				return element.GetResponseHeadersValue();
			}
		
		}
		
		#endregion
		#region RequestHeaders domain property code
		
		/// <summary>
		/// RequestHeaders domain property Id.
		/// </summary>
		public static readonly global::System.Guid RequestHeadersDomainPropertyId = new global::System.Guid(0x838e029b, 0x464a, 0x4a1b, 0x91, 0x09, 0x81, 0x76, 0x21, 0x75, 0x27, 0x1a);
		
		/// <summary>
		/// Gets or sets the value of RequestHeaders domain property.
		/// API headers for the inbound HTTP Api
		/// </summary>
		[System.ComponentModel.Editor(typeof(ApiStudioComponentUITypeEditor<HttpApi, ApiStudioComponentHeaderRequest>), typeof(System.Drawing.Design.UITypeEditor))]
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApi/RequestHeaders.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApi/RequestHeaders.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApi/RequestHeaders.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("838e029b-464a-4a1b-9109-81762175271a")]
		public global::System.Collections.Generic.List<ApiStudioComponentHeaderRequest> RequestHeaders
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return RequestHeadersPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApi.RequestHeaders domain property.
		/// </summary>
		internal sealed partial class RequestHeadersPropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApi, global::System.Collections.Generic.List<ApiStudioComponentHeaderRequest>>
		{
			private RequestHeadersPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApi.RequestHeaders domain property value handler.
			/// </summary>
			public static readonly RequestHeadersPropertyHandler Instance = new RequestHeadersPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApi.RequestHeaders domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return RequestHeadersDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Collections.Generic.List<ApiStudioComponentHeaderRequest> GetValue(HttpApi element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for RequestHeaders because its Kind is
				// set to Calculated. Please provide the GetRequestHeadersValue()
				// method on the domain class.
				return element.GetRequestHeadersValue();
			}
		
		}
		
		#endregion
		#region SourceDataModel opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceDataModel.
		/// Description for ApiStudioIO.HttpApiSuccessRequestModel.HttpApi
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DataModel> SourceDataModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DataModel>, DataModel>(global::ApiStudioIO.HttpApiSuccessRequestModel.HttpApiDomainRoleId);
			}
		}
		#endregion
		#region DataModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DataModels.
		/// Description for ApiStudioIO.HttpApiSuccessResponseModel.HttpApi
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DataModel> DataModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DataModel>, DataModel>(global::ApiStudioIO.HttpApiSuccessResponseModel.HttpApiDomainRoleId);
			}
		}
		#endregion
		#region HttpApiParameters opposite domain role accessor
		
		/// <summary>
		/// Gets a list of HttpApiParameters.
		/// Description for ApiStudioIO.HttpApiHasParameters.HttpApi
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<HttpApiParameter> HttpApiParameters
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<HttpApiParameter>, HttpApiParameter>(global::ApiStudioIO.HttpApiHasParameters.HttpApiDomainRoleId);
			}
		}
		#endregion
		#region HttpApiResponseStatusCodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of HttpApiResponseStatusCodes.
		/// Description for ApiStudioIO.HttpApiHasResponseStatusCodes.HttpApi
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<HttpApiResponseStatusCode> HttpApiResponseStatusCodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<HttpApiResponseStatusCode>, HttpApiResponseStatusCode>(global::ApiStudioIO.HttpApiHasResponseStatusCodes.HttpApiDomainRoleId);
			}
		}
		#endregion
		#region HttpApiMediaTypeResponsed opposite domain role accessor
		
		/// <summary>
		/// Gets a list of HttpApiMediaTypeResponsed.
		/// Description for ApiStudioIO.HttpApiHasMediaTypeResponse.HttpApi
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<HttpApiMediaTypeResponse> HttpApiMediaTypeResponsed
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<HttpApiMediaTypeResponse>, HttpApiMediaTypeResponse>(global::ApiStudioIO.HttpApiHasMediaTypeResponse.HttpApiDomainRoleId);
			}
		}
		#endregion
		#region HttpApiMediaTypeRequestd opposite domain role accessor
		
		/// <summary>
		/// Gets a list of HttpApiMediaTypeRequestd.
		/// Description for ApiStudioIO.HttpApiHasMediaTypeRequest.HttpApi
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<HttpApiMediaTypeRequest> HttpApiMediaTypeRequestd
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<HttpApiMediaTypeRequest>, HttpApiMediaTypeRequest>(global::ApiStudioIO.HttpApiHasMediaTypeRequest.HttpApiDomainRoleId);
			}
		}
		#endregion
		#region HttpApiHeaderRequests opposite domain role accessor
		
		/// <summary>
		/// Gets a list of HttpApiHeaderRequests.
		/// Description for ApiStudioIO.HttpApiHasHeaderRequest.HttpApi
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<HttpApiHeaderRequest> HttpApiHeaderRequests
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<HttpApiHeaderRequest>, HttpApiHeaderRequest>(global::ApiStudioIO.HttpApiHasHeaderRequest.HttpApiDomainRoleId);
			}
		}
		#endregion
		#region HttpApiHeaderResponses opposite domain role accessor
		
		/// <summary>
		/// Gets a list of HttpApiHeaderResponses.
		/// Description for ApiStudioIO.HttpApiHasHeaderResponse.HttpApi
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<HttpApiHeaderResponse> HttpApiHeaderResponses
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<HttpApiHeaderResponse>, HttpApiHeaderResponse>(global::ApiStudioIO.HttpApiHasHeaderResponse.HttpApiDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::ApiStudioIO.HttpApiMediaTypeResponse.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::ApiStudioIO.HttpApiMediaTypeRequest.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::ApiStudioIO.HttpApiHeaderRequest.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::ApiStudioIO.HttpApiHeaderResponse.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::ApiStudioIO.HttpApiParameter.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::ApiStudioIO.HttpApiResponseStatusCode.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::ApiStudioIO.HttpApiMediaTypeResponse sourceHttpApiMediaTypeResponse1 = sourceElement as global::ApiStudioIO.HttpApiMediaTypeResponse;
			if (sourceHttpApiMediaTypeResponse1 != null)
			{
				// Create link for path HttpApiHasMediaTypeResponse.HttpApiMediaTypeResponsed
				this.HttpApiMediaTypeResponsed.Add(sourceHttpApiMediaTypeResponse1);

				return;
			}
				
			global::ApiStudioIO.HttpApiMediaTypeRequest sourceHttpApiMediaTypeRequest2 = sourceElement as global::ApiStudioIO.HttpApiMediaTypeRequest;
			if (sourceHttpApiMediaTypeRequest2 != null)
			{
				// Create link for path HttpApiHasMediaTypeRequest.HttpApiMediaTypeRequestd
				this.HttpApiMediaTypeRequestd.Add(sourceHttpApiMediaTypeRequest2);

				return;
			}
				
			global::ApiStudioIO.HttpApiHeaderRequest sourceHttpApiHeaderRequest3 = sourceElement as global::ApiStudioIO.HttpApiHeaderRequest;
			if (sourceHttpApiHeaderRequest3 != null)
			{
				// Create link for path HttpApiHasHeaderRequest.HttpApiHeaderRequests
				this.HttpApiHeaderRequests.Add(sourceHttpApiHeaderRequest3);

				return;
			}
				
			global::ApiStudioIO.HttpApiHeaderResponse sourceHttpApiHeaderResponse4 = sourceElement as global::ApiStudioIO.HttpApiHeaderResponse;
			if (sourceHttpApiHeaderResponse4 != null)
			{
				// Create link for path HttpApiHasHeaderResponse.HttpApiHeaderResponses
				this.HttpApiHeaderResponses.Add(sourceHttpApiHeaderResponse4);

				return;
			}
				
			global::ApiStudioIO.HttpApiParameter sourceHttpApiParameter5 = sourceElement as global::ApiStudioIO.HttpApiParameter;
			if (sourceHttpApiParameter5 != null)
			{
				// Create link for path HttpApiHasParameters.HttpApiParameters
				this.HttpApiParameters.Add(sourceHttpApiParameter5);

				return;
			}
				
			global::ApiStudioIO.HttpApiResponseStatusCode sourceHttpApiResponseStatusCode6 = sourceElement as global::ApiStudioIO.HttpApiResponseStatusCode;
			if (sourceHttpApiResponseStatusCode6 != null)
			{
				// Create link for path HttpApiHasResponseStatusCodes.HttpApiResponseStatusCodes
				this.HttpApiResponseStatusCodes.Add(sourceHttpApiResponseStatusCode6);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::ApiStudioIO.HttpApiMediaTypeResponse sourceHttpApiMediaTypeResponse1 = sourceElement as global::ApiStudioIO.HttpApiMediaTypeResponse;
			if (sourceHttpApiMediaTypeResponse1 != null)
			{
				// Delete link for path HttpApiHasMediaTypeResponse.HttpApiMediaTypeResponsed
				
				foreach (DslModeling::ElementLink link in global::ApiStudioIO.HttpApiHasMediaTypeResponse.GetLinks((global::ApiStudioIO.HttpApi)this, sourceHttpApiMediaTypeResponse1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::ApiStudioIO.HttpApiHasMediaTypeResponse.HttpApiDomainRoleId, global::ApiStudioIO.HttpApiHasMediaTypeResponse.HttpApiMediaTypeResponseDomainRoleId);
				}

				return;
			}
				
			global::ApiStudioIO.HttpApiMediaTypeRequest sourceHttpApiMediaTypeRequest2 = sourceElement as global::ApiStudioIO.HttpApiMediaTypeRequest;
			if (sourceHttpApiMediaTypeRequest2 != null)
			{
				// Delete link for path HttpApiHasMediaTypeRequest.HttpApiMediaTypeRequestd
				
				foreach (DslModeling::ElementLink link in global::ApiStudioIO.HttpApiHasMediaTypeRequest.GetLinks((global::ApiStudioIO.HttpApi)this, sourceHttpApiMediaTypeRequest2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::ApiStudioIO.HttpApiHasMediaTypeRequest.HttpApiDomainRoleId, global::ApiStudioIO.HttpApiHasMediaTypeRequest.HttpApiMediaTypeRequestDomainRoleId);
				}

				return;
			}
				
			global::ApiStudioIO.HttpApiHeaderRequest sourceHttpApiHeaderRequest3 = sourceElement as global::ApiStudioIO.HttpApiHeaderRequest;
			if (sourceHttpApiHeaderRequest3 != null)
			{
				// Delete link for path HttpApiHasHeaderRequest.HttpApiHeaderRequests
				
				foreach (DslModeling::ElementLink link in global::ApiStudioIO.HttpApiHasHeaderRequest.GetLinks((global::ApiStudioIO.HttpApi)this, sourceHttpApiHeaderRequest3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::ApiStudioIO.HttpApiHasHeaderRequest.HttpApiDomainRoleId, global::ApiStudioIO.HttpApiHasHeaderRequest.HttpApiHeaderRequestDomainRoleId);
				}

				return;
			}
				
			global::ApiStudioIO.HttpApiHeaderResponse sourceHttpApiHeaderResponse4 = sourceElement as global::ApiStudioIO.HttpApiHeaderResponse;
			if (sourceHttpApiHeaderResponse4 != null)
			{
				// Delete link for path HttpApiHasHeaderResponse.HttpApiHeaderResponses
				
				foreach (DslModeling::ElementLink link in global::ApiStudioIO.HttpApiHasHeaderResponse.GetLinks((global::ApiStudioIO.HttpApi)this, sourceHttpApiHeaderResponse4))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::ApiStudioIO.HttpApiHasHeaderResponse.HttpApiDomainRoleId, global::ApiStudioIO.HttpApiHasHeaderResponse.HttpApiHeaderResponseDomainRoleId);
				}

				return;
			}
				
			global::ApiStudioIO.HttpApiParameter sourceHttpApiParameter5 = sourceElement as global::ApiStudioIO.HttpApiParameter;
			if (sourceHttpApiParameter5 != null)
			{
				// Delete link for path HttpApiHasParameters.HttpApiParameters
				
				foreach (DslModeling::ElementLink link in global::ApiStudioIO.HttpApiHasParameters.GetLinks((global::ApiStudioIO.HttpApi)this, sourceHttpApiParameter5))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::ApiStudioIO.HttpApiHasParameters.HttpApiDomainRoleId, global::ApiStudioIO.HttpApiHasParameters.HttpApiParameterDomainRoleId);
				}

				return;
			}
				
			global::ApiStudioIO.HttpApiResponseStatusCode sourceHttpApiResponseStatusCode6 = sourceElement as global::ApiStudioIO.HttpApiResponseStatusCode;
			if (sourceHttpApiResponseStatusCode6 != null)
			{
				// Delete link for path HttpApiHasResponseStatusCodes.HttpApiResponseStatusCodes
				
				foreach (DslModeling::ElementLink link in global::ApiStudioIO.HttpApiHasResponseStatusCodes.GetLinks((global::ApiStudioIO.HttpApi)this, sourceHttpApiResponseStatusCode6))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::ApiStudioIO.HttpApiHasResponseStatusCodes.HttpApiDomainRoleId, global::ApiStudioIO.HttpApiHasResponseStatusCodes.HttpApiResponseStatusCodeDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass ResourceAction
	/// An action resource models a procedural concept. Action resources are like
	/// executable functions, with parameters and return values; inputs and outputs.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.ResourceAction.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.ResourceAction.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("3f6ef04d-da19-45f5-9b78-6e5115067400")]
	public partial class ResourceAction : Resource
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ResourceAction domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3f6ef04d, 0xda19, 0x45f5, 0x9b, 0x78, 0x6e, 0x51, 0x15, 0x06, 0x74, 0x00);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ResourceAction(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ResourceAction(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiGet
	/// The GET method requests a representation of the specified resource. Requests
	/// using GET should only retrieve data.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiGet.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiGet.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("20473669-b673-4c49-9ef4-e90e0f717735")]
	public partial class HttpApiGet : HttpApi
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiGet domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x20473669, 0xb673, 0x4c49, 0x9e, 0xf4, 0xe9, 0x0e, 0x0f, 0x71, 0x77, 0x35);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiGet(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiGet(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiPut
	/// The PUT method replaces all current representations of the target resource with
	/// the request payload.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiPut.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiPut.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("37bb2c14-2747-46f6-9ff6-cd9d74b24f0b")]
	public partial class HttpApiPut : HttpApi
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiPut domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x37bb2c14, 0x2747, 0x46f6, 0x9f, 0xf6, 0xcd, 0x9d, 0x74, 0xb2, 0x4f, 0x0b);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiPut(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiPut(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiPost
	/// The POST method submits an entity to the specified resource, often causing a
	/// change in state or side effects on the server.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiPost.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiPost.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("023524ae-d4d8-45dd-87d5-04a61f53602f")]
	public partial class HttpApiPost : HttpApi
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiPost domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x023524ae, 0xd4d8, 0x45dd, 0x87, 0xd5, 0x04, 0xa6, 0x1f, 0x53, 0x60, 0x2f);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiPost(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiPost(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiDelete
	/// The DELETE method deletes the specified resource.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiDelete.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiDelete.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ea41c46b-0e0e-4763-8380-fa5456b99262")]
	public partial class HttpApiDelete : HttpApi
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiDelete domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xea41c46b, 0x0e0e, 0x4763, 0x83, 0x80, 0xfa, 0x54, 0x56, 0xb9, 0x92, 0x62);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiDelete(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiDelete(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass DataModel
	/// Data entities to be used as definition within OpenAPI specifciation
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.DataModel.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.DataModel.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("79a1ace0-4eb9-4e12-978c-499045ad8edb")]
	public partial class DataModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DataModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x79a1ace0, 0x4eb9, 0x4e12, 0x97, 0x8c, 0x49, 0x90, 0x45, 0xad, 0x8e, 0xdb);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DataModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DataModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x6fffa5cc, 0xbf10, 0x406f, 0xa0, 0x41, 0x2d, 0x7a, 0x9b, 0x10, 0xf5, 0x23);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// The name of the data model. This should align with the GDM name when possible.
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.DataModel/Name.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.DataModel/Name.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.DataModel/Name.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("6fffa5cc-bf10-406f-a041-2d7a9b10f523")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DataModel.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<DataModel, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DataModel.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DataModel.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DataModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DataModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0xee416165, 0x3a63, 0x4c6c, 0xb8, 0xc4, 0x0b, 0xa1, 0x11, 0x7f, 0xcc, 0x1d);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// The description of the data model. This should align with the GDM name when
		/// possible.
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.DataModel/Description.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.DataModel/Description.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.DataModel/Description.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ee416165-3a63-4c6c-b8c4-0ba1117fcc1d")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DataModel.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<DataModel, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DataModel.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DataModel.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DataModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DataModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region HttpApis opposite domain role accessor
		
		/// <summary>
		/// Gets a list of HttpApis.
		/// Description for ApiStudioIO.HttpApiSuccessRequestModel.DataModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<HttpApi> HttpApis
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<HttpApi>, HttpApi>(global::ApiStudioIO.HttpApiSuccessRequestModel.DataModelDomainRoleId);
			}
		}
		#endregion
		#region SourceHttpApi opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceHttpApi.
		/// Description for ApiStudioIO.HttpApiSuccessResponseModel.DataModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<HttpApi> SourceHttpApi
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<HttpApi>, HttpApi>(global::ApiStudioIO.HttpApiSuccessResponseModel.DataModelDomainRoleId);
			}
		}
		#endregion
		#region ApiStudio opposite domain role accessor
		/// <summary>
		/// Gets or sets ApiStudio.
		/// Description for ApiStudioIO.ApiStudioHasDataModeled.DataModel
		/// </summary>
		public virtual ApiStudio ApiStudio
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ApiStudioIO.ApiStudioHasDataModeled.DataModelDomainRoleId) as ApiStudio;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ApiStudioIO.ApiStudioHasDataModeled.DataModelDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass ResourceAttribute
	/// An attribute resource is a procedural concept. Attributes allow the specific
	/// resource for a given attribute of a parent resource. Typically Getter and Putter
	/// functionality.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.ResourceAttribute.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.ResourceAttribute.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("67e3206a-7393-4ecb-ad34-28fb59ebbd47")]
	public partial class ResourceAttribute : Resource
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ResourceAttribute domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x67e3206a, 0x7393, 0x4ecb, 0xad, 0x34, 0x28, 0xfb, 0x59, 0xeb, 0xbd, 0x47);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ResourceAttribute(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ResourceAttribute(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiMediaTypeResponse
	/// Description for ApiStudioIO.HttpApiMediaTypeResponse
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiMediaTypeResponse.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiMediaTypeResponse.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("76d61bcc-3e15-41fb-916c-4815e0c511cc")]
	public partial class HttpApiMediaTypeResponse : HttpApiMediaType
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiMediaTypeResponse domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x76d61bcc, 0x3e15, 0x41fb, 0x91, 0x6c, 0x48, 0x15, 0xe0, 0xc5, 0x11, 0xcc);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiMediaTypeResponse(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiMediaTypeResponse(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region HttpApi opposite domain role accessor
		/// <summary>
		/// Gets or sets HttpApi.
		/// Description for ApiStudioIO.HttpApiHasMediaTypeResponse.HttpApiMediaTypeResponse
		/// </summary>
		public virtual HttpApi HttpApi
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ApiStudioIO.HttpApiHasMediaTypeResponse.HttpApiMediaTypeResponseDomainRoleId) as HttpApi;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ApiStudioIO.HttpApiHasMediaTypeResponse.HttpApiMediaTypeResponseDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiMediaTypeRequest
	/// Description for ApiStudioIO.HttpApiMediaTypeRequest
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiMediaTypeRequest.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiMediaTypeRequest.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("429c9ce3-911c-44cc-9b3f-574ec36b8bed")]
	public partial class HttpApiMediaTypeRequest : HttpApiMediaType
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiMediaTypeRequest domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x429c9ce3, 0x911c, 0x44cc, 0x9b, 0x3f, 0x57, 0x4e, 0xc3, 0x6b, 0x8b, 0xed);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiMediaTypeRequest(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiMediaTypeRequest(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region HttpApi opposite domain role accessor
		/// <summary>
		/// Gets or sets HttpApi.
		/// Description for ApiStudioIO.HttpApiHasMediaTypeRequest.HttpApiMediaTypeRequest
		/// </summary>
		public virtual HttpApi HttpApi
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ApiStudioIO.HttpApiHasMediaTypeRequest.HttpApiMediaTypeRequestDomainRoleId) as HttpApi;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ApiStudioIO.HttpApiHasMediaTypeRequest.HttpApiMediaTypeRequestDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiParameter
	/// Description for ApiStudioIO.HttpApiParameter
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiParameter.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameter.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (DisplayName = {DisplayName})")]
	[DslModeling::DomainObjectId("b4fba5c1-00f0-4d9b-92c1-24a952a6313a")]
	public partial class HttpApiParameter : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiParameter domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb4fba5c1, 0x00f0, 0x4d9b, 0x92, 0xc1, 0x24, 0xa9, 0x52, 0xa6, 0x31, 0x3a);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiParameter(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiParameter(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Identifier domain property code
		
		/// <summary>
		/// Identifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid IdentifierDomainPropertyId = new global::System.Guid(0x382606f2, 0x0aaf, 0x426f, 0xb7, 0xe2, 0xde, 0x24, 0x42, 0x71, 0x8c, 0x21);
		
		/// <summary>
		/// Storage for Identifier
		/// </summary>
		private global::System.String identifierPropertyStorage = "ParameterName";
		
		/// <summary>
		/// Gets or sets the value of Identifier domain property.
		/// The identifier (variable name) of the given parameter
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiParameter/Identifier.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiParameter/Identifier.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameter/Identifier.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("ParameterName")]
		[DslModeling::DomainObjectId("382606f2-0aaf-426f-b7e2-de2442718c21")]
		public global::System.String Identifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return identifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IdentifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiParameter.Identifier domain property.
		/// </summary>
		internal sealed partial class IdentifierPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiParameter, global::System.String>
		{
			private IdentifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiParameter.Identifier domain property value handler.
			/// </summary>
			public static readonly IdentifierPropertyHandler Instance = new IdentifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiParameter.Identifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IdentifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiParameter element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.identifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiParameter element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.identifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DataType domain property code
		
		/// <summary>
		/// DataType domain property Id.
		/// </summary>
		public static readonly global::System.Guid DataTypeDomainPropertyId = new global::System.Guid(0x05df3aa8, 0x91f5, 0x4c54, 0xbe, 0xa7, 0x6c, 0xb1, 0x75, 0xda, 0xd1, 0x11);
		
		/// <summary>
		/// Storage for DataType
		/// </summary>
		private global::System.String dataTypePropertyStorage = "string";
		
		/// <summary>
		/// Gets or sets the value of DataType domain property.
		/// Description for ApiStudioIO.HttpApiParameter.Data Type
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiParameter/DataType.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiParameter/DataType.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameter/DataType.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("string")]
		[DslModeling::DomainObjectId("05df3aa8-91f5-4c54-bea7-6cb175dad111")]
		public global::System.String DataType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return dataTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DataTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiParameter.DataType domain property.
		/// </summary>
		internal sealed partial class DataTypePropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiParameter, global::System.String>
		{
			private DataTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiParameter.DataType domain property value handler.
			/// </summary>
			public static readonly DataTypePropertyHandler Instance = new DataTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiParameter.DataType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DataTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiParameter element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.dataTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiParameter element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.dataTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0xe0cf4e69, 0x77dc, 0x43fb, 0xa0, 0x43, 0x0c, 0x55, 0xd2, 0x89, 0x7f, 0xcf);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = "This is a description about the API parameter";
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for ApiStudioIO.HttpApiParameter.Description
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiParameter/Description.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiParameter/Description.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameter/Description.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("This is a description about the API parameter")]
		[DslModeling::DomainObjectId("e0cf4e69-77dc-43fb-a043-0c55d2897fcf")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiParameter.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiParameter, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiParameter.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiParameter.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiParameter element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiParameter element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsRequired domain property code
		
		/// <summary>
		/// IsRequired domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsRequiredDomainPropertyId = new global::System.Guid(0xd9cec306, 0x8d1c, 0x4ed8, 0xbb, 0xf4, 0x89, 0x91, 0x86, 0x99, 0x7e, 0x8f);
		
		/// <summary>
		/// Storage for IsRequired
		/// </summary>
		private global::System.Boolean isRequiredPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsRequired domain property.
		/// Description for ApiStudioIO.HttpApiParameter.Is Required
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiParameter/IsRequired.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiParameter/IsRequired.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameter/IsRequired.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d9cec306-8d1c-4ed8-bbf4-899186997e8f")]
		public global::System.Boolean IsRequired
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isRequiredPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsRequiredPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiParameter.IsRequired domain property.
		/// </summary>
		internal sealed partial class IsRequiredPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiParameter, global::System.Boolean>
		{
			private IsRequiredPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiParameter.IsRequired domain property value handler.
			/// </summary>
			public static readonly IsRequiredPropertyHandler Instance = new IsRequiredPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiParameter.IsRequired domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsRequiredDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(HttpApiParameter element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isRequiredPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiParameter element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isRequiredPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FromType domain property code
		
		/// <summary>
		/// FromType domain property Id.
		/// </summary>
		public static readonly global::System.Guid FromTypeDomainPropertyId = new global::System.Guid(0xf0853a14, 0x3d29, 0x4d60, 0xb8, 0xec, 0xf3, 0x9f, 0x1f, 0x06, 0x89, 0x20);
		
		/// <summary>
		/// Storage for FromType
		/// </summary>
		private HttpApiParameterTypes fromTypePropertyStorage = HttpApiParameterTypes.Query;
		
		/// <summary>
		/// Gets or sets the value of FromType domain property.
		/// This property determines where the parameter comes from e.g. Header, Body,
		/// Query, ...
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiParameter/FromType.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiParameter/FromType.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameter/FromType.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(HttpApiParameterTypes.Query)]
		[DslModeling::DomainObjectId("f0853a14-3d29-4d60-b8ec-f39f1f068920")]
		public HttpApiParameterTypes FromType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return fromTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FromTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiParameter.FromType domain property.
		/// </summary>
		internal sealed partial class FromTypePropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiParameter, HttpApiParameterTypes>
		{
			private FromTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiParameter.FromType domain property value handler.
			/// </summary>
			public static readonly FromTypePropertyHandler Instance = new FromTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiParameter.FromType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FromTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed HttpApiParameterTypes GetValue(HttpApiParameter element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.fromTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiParameter element, HttpApiParameterTypes newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				HttpApiParameterTypes oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.fromTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsAutoGenerated domain property code
		
		/// <summary>
		/// IsAutoGenerated domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsAutoGeneratedDomainPropertyId = new global::System.Guid(0xaf415229, 0x6fd9, 0x4fe2, 0xa7, 0x18, 0x90, 0x15, 0xd5, 0xa0, 0x12, 0x70);
		
		/// <summary>
		/// Storage for IsAutoGenerated
		/// </summary>
		private global::System.Boolean isAutoGeneratedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsAutoGenerated domain property.
		/// Description for ApiStudioIO.HttpApiParameter.Is Auto Generated
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiParameter/IsAutoGenerated.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiParameter/IsAutoGenerated.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameter/IsAutoGenerated.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("af415229-6fd9-4fe2-a718-9015d5a01270")]
		public global::System.Boolean IsAutoGenerated
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isAutoGeneratedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsAutoGeneratedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiParameter.IsAutoGenerated domain property.
		/// </summary>
		internal sealed partial class IsAutoGeneratedPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiParameter, global::System.Boolean>
		{
			private IsAutoGeneratedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiParameter.IsAutoGenerated domain property value handler.
			/// </summary>
			public static readonly IsAutoGeneratedPropertyHandler Instance = new IsAutoGeneratedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiParameter.IsAutoGenerated domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsAutoGeneratedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(HttpApiParameter element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isAutoGeneratedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiParameter element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isAutoGeneratedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DisplayName domain property code
		
		/// <summary>
		/// DisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisplayNameDomainPropertyId = new global::System.Guid(0x384030a6, 0x20b1, 0x4519, 0x93, 0x5b, 0xeb, 0xe6, 0x4a, 0xa6, 0x22, 0x74);
		
		/// <summary>
		/// Gets or sets the value of DisplayName domain property.
		/// This property is used for deplay within the designer
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiParameter/DisplayName.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiParameter/DisplayName.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiParameter/DisplayName.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::ElementName]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("384030a6-20b1-4519-935b-ebe64aa62274")]
		public global::System.String DisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DisplayNamePropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiParameter.DisplayName domain property.
		/// </summary>
		internal sealed partial class DisplayNamePropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApiParameter, global::System.String>
		{
			private DisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiParameter.DisplayName domain property value handler.
			/// </summary>
			public static readonly DisplayNamePropertyHandler Instance = new DisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiParameter.DisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiParameter element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for DisplayName because its Kind is
				// set to Calculated. Please provide the GetDisplayNameValue()
				// method on the domain class.
				return element.GetDisplayNameValue();
			}
		
		}
		
		#endregion
		#region HttpApi opposite domain role accessor
		/// <summary>
		/// Gets or sets HttpApi.
		/// Description for ApiStudioIO.HttpApiHasParameters.HttpApiParameter
		/// </summary>
		public virtual HttpApi HttpApi
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ApiStudioIO.HttpApiHasParameters.HttpApiParameterDomainRoleId) as HttpApi;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ApiStudioIO.HttpApiHasParameters.HttpApiParameterDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiResponseStatusCode
	/// Description for ApiStudioIO.HttpApiResponseStatusCode
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiResponseStatusCode.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiResponseStatusCode.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (DisplayName = {DisplayName})")]
	[DslModeling::DomainObjectId("e0cbd9e4-dc1c-4b20-aaa5-4a58c1a2a101")]
	public partial class HttpApiResponseStatusCode : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiResponseStatusCode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe0cbd9e4, 0xdc1c, 0x4b20, 0xaa, 0xa5, 0x4a, 0x58, 0xc1, 0xa2, 0xa1, 0x01);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiResponseStatusCode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiResponseStatusCode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DisplayName domain property code
		
		/// <summary>
		/// DisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisplayNameDomainPropertyId = new global::System.Guid(0xdabe33b8, 0x515f, 0x4111, 0xab, 0x71, 0x94, 0x91, 0xb8, 0xea, 0xc0, 0xbe);
		
		/// <summary>
		/// Gets or sets the value of DisplayName domain property.
		/// This property is used for deplay within the designer
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiResponseStatusCode/DisplayName.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiResponseStatusCode/DisplayName.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiResponseStatusCode/DisplayName.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::ElementName]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("dabe33b8-515f-4111-ab71-9491b8eac0be")]
		public global::System.String DisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DisplayNamePropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiResponseStatusCode.DisplayName domain property.
		/// </summary>
		internal sealed partial class DisplayNamePropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApiResponseStatusCode, global::System.String>
		{
			private DisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiResponseStatusCode.DisplayName domain property value handler.
			/// </summary>
			public static readonly DisplayNamePropertyHandler Instance = new DisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiResponseStatusCode.DisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiResponseStatusCode element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for DisplayName because its Kind is
				// set to Calculated. Please provide the GetDisplayNameValue()
				// method on the domain class.
				return element.GetDisplayNameValue();
			}
		
		}
		
		#endregion
		#region HttpStatus domain property code
		
		/// <summary>
		/// HttpStatus domain property Id.
		/// </summary>
		public static readonly global::System.Guid HttpStatusDomainPropertyId = new global::System.Guid(0x6a2e0d39, 0x707c, 0x4fba, 0x92, 0x66, 0xd8, 0x9c, 0xab, 0xa6, 0xff, 0xa5);
		
		/// <summary>
		/// Storage for HttpStatus
		/// </summary>
		private global::System.Int32 httpStatusPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of HttpStatus domain property.
		/// Description for ApiStudioIO.HttpApiResponseStatusCode.Http Status
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiResponseStatusCode/HttpStatus.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiResponseStatusCode/HttpStatus.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiResponseStatusCode/HttpStatus.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6a2e0d39-707c-4fba-9266-d89caba6ffa5")]
		public global::System.Int32 HttpStatus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return httpStatusPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				HttpStatusPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiResponseStatusCode.HttpStatus domain property.
		/// </summary>
		internal sealed partial class HttpStatusPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiResponseStatusCode, global::System.Int32>
		{
			private HttpStatusPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiResponseStatusCode.HttpStatus domain property value handler.
			/// </summary>
			public static readonly HttpStatusPropertyHandler Instance = new HttpStatusPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiResponseStatusCode.HttpStatus domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return HttpStatusDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int32 GetValue(HttpApiResponseStatusCode element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.httpStatusPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiResponseStatusCode element, global::System.Int32 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int32 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.httpStatusPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Type domain property code
		
		/// <summary>
		/// Type domain property Id.
		/// </summary>
		public static readonly global::System.Guid TypeDomainPropertyId = new global::System.Guid(0x10b6fa85, 0xbc59, 0x4512, 0x9b, 0x41, 0x4e, 0xd0, 0xea, 0xe2, 0x9f, 0xf1);
		
		/// <summary>
		/// Gets or sets the value of Type domain property.
		/// Description for ApiStudioIO.HttpApiResponseStatusCode.Type
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiResponseStatusCode/Type.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiResponseStatusCode/Type.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiResponseStatusCode/Type.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("10b6fa85-bc59-4512-9b41-4ed0eae29ff1")]
		public global::System.String Type
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return TypePropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiResponseStatusCode.Type domain property.
		/// </summary>
		internal sealed partial class TypePropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApiResponseStatusCode, global::System.String>
		{
			private TypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiResponseStatusCode.Type domain property value handler.
			/// </summary>
			public static readonly TypePropertyHandler Instance = new TypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiResponseStatusCode.Type domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiResponseStatusCode element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for Type because its Kind is
				// set to Calculated. Please provide the GetTypeValue()
				// method on the domain class.
				return element.GetTypeValue();
			}
		
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0x2558ae2c, 0xe05d, 0x48b2, 0xb4, 0x97, 0xe9, 0x4e, 0x9a, 0x74, 0x4d, 0x58);
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for ApiStudioIO.HttpApiResponseStatusCode.Description
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiResponseStatusCode/Description.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiResponseStatusCode/Description.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiResponseStatusCode/Description.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("2558ae2c-e05d-48b2-b497-e94e9a744d58")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DescriptionPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiResponseStatusCode.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApiResponseStatusCode, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiResponseStatusCode.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiResponseStatusCode.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiResponseStatusCode element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for Description because its Kind is
				// set to Calculated. Please provide the GetDescriptionValue()
				// method on the domain class.
				return element.GetDescriptionValue();
			}
		
		}
		
		#endregion
		#region IsAutoGenerated domain property code
		
		/// <summary>
		/// IsAutoGenerated domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsAutoGeneratedDomainPropertyId = new global::System.Guid(0x685eb132, 0x73bc, 0x4608, 0xb4, 0x52, 0x87, 0x77, 0x50, 0xb9, 0x93, 0x9d);
		
		/// <summary>
		/// Storage for IsAutoGenerated
		/// </summary>
		private global::System.Boolean isAutoGeneratedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsAutoGenerated domain property.
		/// Description for ApiStudioIO.HttpApiResponseStatusCode.Is Auto Generated
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiResponseStatusCode/IsAutoGenerated.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiResponseStatusCode/IsAutoGenerated.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiResponseStatusCode/IsAutoGenerated.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("685eb132-73bc-4608-b452-877750b9939d")]
		public global::System.Boolean IsAutoGenerated
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isAutoGeneratedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsAutoGeneratedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiResponseStatusCode.IsAutoGenerated domain property.
		/// </summary>
		internal sealed partial class IsAutoGeneratedPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiResponseStatusCode, global::System.Boolean>
		{
			private IsAutoGeneratedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiResponseStatusCode.IsAutoGenerated domain property value handler.
			/// </summary>
			public static readonly IsAutoGeneratedPropertyHandler Instance = new IsAutoGeneratedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiResponseStatusCode.IsAutoGenerated domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsAutoGeneratedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(HttpApiResponseStatusCode element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isAutoGeneratedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiResponseStatusCode element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isAutoGeneratedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region HttpApi opposite domain role accessor
		/// <summary>
		/// Gets or sets HttpApi.
		/// Description for
		/// ApiStudioIO.HttpApiHasResponseStatusCodes.HttpApiResponseStatusCode
		/// </summary>
		public virtual HttpApi HttpApi
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ApiStudioIO.HttpApiHasResponseStatusCodes.HttpApiResponseStatusCodeDomainRoleId) as HttpApi;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ApiStudioIO.HttpApiHasResponseStatusCodes.HttpApiResponseStatusCodeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass Api
	/// Description for ApiStudioIO.Api
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.Api.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.Api.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (DisplayName = {DisplayName})")]
	[DslModeling::DomainObjectId("5cddab78-4333-4cc4-b75b-2b01f31d3a9e")]
	public abstract partial class Api : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Api domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5cddab78, 0x4333, 0x4cc4, 0xb7, 0x5b, 0x2b, 0x01, 0xf3, 0x1d, 0x3a, 0x9e);
		// Constructors were not generated for this class because it had HasCustomConstructor
		// set to true. Please provide the constructors below in a partial class.
		///// <summary>
		///// Constructor.
		///// </summary>
		///// <param name="partition">Partition where new element is to be created.</param>
		///// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		//protected Api(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
		//	: base(partition, propertyAssignments)
		//{
		//}
		#endregion
		#region DisplayName domain property code
		
		/// <summary>
		/// DisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisplayNameDomainPropertyId = new global::System.Guid(0x4908bf7c, 0x751d, 0x41ef, 0x97, 0x7e, 0xbe, 0x51, 0x0f, 0x57, 0x3f, 0x37);
		
		/// <summary>
		/// Gets or sets the value of DisplayName domain property.
		/// Description for ApiStudioIO.Api.Display Name
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.Api/DisplayName.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.Api/DisplayName.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.Api/DisplayName.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::ElementName]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("4908bf7c-751d-41ef-977e-be510f573f37")]
		public global::System.String DisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DisplayNamePropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Api.DisplayName domain property.
		/// </summary>
		internal sealed partial class DisplayNamePropertyHandler : DslModeling::CalculatedPropertyValueHandler<Api, global::System.String>
		{
			private DisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Api.DisplayName domain property value handler.
			/// </summary>
			public static readonly DisplayNamePropertyHandler Instance = new DisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Api.DisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Api element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for DisplayName because its Kind is
				// set to Calculated. Please provide the GetDisplayNameValue()
				// method on the domain class.
				return element.GetDisplayNameValue();
			}
		
		}
		
		#endregion
		#region ImperativeVerb domain property code
		
		/// <summary>
		/// ImperativeVerb domain property Id.
		/// </summary>
		public static readonly global::System.Guid ImperativeVerbDomainPropertyId = new global::System.Guid(0xb975b930, 0x6bd5, 0x47f8, 0xaa, 0x19, 0x1b, 0x5f, 0x1a, 0x65, 0x0a, 0x2c);
		
		/// <summary>
		/// Storage for ImperativeVerb
		/// </summary>
		private global::System.String imperativeVerbPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ImperativeVerb domain property.
		/// Names (verbs) in the imperative mood plus and may include the aggregate type,
		/// for example ConfirmOrder
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.Api/ImperativeVerb.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.Api/ImperativeVerb.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.Api/ImperativeVerb.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("b975b930-6bd5-47f8-aa19-1b5f1a650a2c")]
		public global::System.String ImperativeVerb
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return imperativeVerbPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ImperativeVerbPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Api.ImperativeVerb domain property.
		/// </summary>
		internal sealed partial class ImperativeVerbPropertyHandler : DslModeling::DomainPropertyValueHandler<Api, global::System.String>
		{
			private ImperativeVerbPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Api.ImperativeVerb domain property value handler.
			/// </summary>
			public static readonly ImperativeVerbPropertyHandler Instance = new ImperativeVerbPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Api.ImperativeVerb domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ImperativeVerbDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Api element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.imperativeVerbPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Api element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.imperativeVerbPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Identifier domain property code
		
		/// <summary>
		/// Identifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid IdentifierDomainPropertyId = new global::System.Guid(0xfc1dc367, 0xa453, 0x496f, 0x87, 0x78, 0x06, 0x4c, 0xad, 0x05, 0xe3, 0xa5);
		
		/// <summary>
		/// Storage for Identifier
		/// </summary>
		private global::System.Guid identifierPropertyStorage = new global::System.Guid("00000000-0000-0000-0000-000000000000");
		
		/// <summary>
		/// Gets or sets the value of Identifier domain property.
		/// ApiStudio Identifier unique to this schema
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.Api/Identifier.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.Api/Identifier.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.Api/Identifier.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(typeof(global::System.Guid), "00000000-0000-0000-0000-000000000000")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("fc1dc367-a453-496f-8778-064cad05e3a5")]
		public global::System.Guid Identifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return identifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IdentifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Api.Identifier domain property.
		/// </summary>
		internal sealed partial class IdentifierPropertyHandler : DslModeling::DomainPropertyValueHandler<Api, global::System.Guid>
		{
			private IdentifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Api.Identifier domain property value handler.
			/// </summary>
			public static readonly IdentifierPropertyHandler Instance = new IdentifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Api.Identifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IdentifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(Api element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.identifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Api element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.identifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Resourced opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Resourced.
		/// Description for ApiStudioIO.ResourceReferencesApis.Api
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Resource> Resourced
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Resource>, Resource>(global::ApiStudioIO.ResourceReferencesApis.ApiDomainRoleId);
			}
		}
		#endregion
		#region ApiStudio opposite domain role accessor
		/// <summary>
		/// Gets or sets ApiStudio.
		/// Description for ApiStudioIO.ApiStudioHasApis.Api
		/// </summary>
		public virtual ApiStudio ApiStudio
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ApiStudioIO.ApiStudioHasApis.ApiDomainRoleId) as ApiStudio;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ApiStudioIO.ApiStudioHasApis.ApiDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiMediaType
	/// Description for ApiStudioIO.HttpApiMediaType
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiMediaType.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiMediaType.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (DisplayName = {DisplayName})")]
	[DslModeling::DomainObjectId("b8e61b93-76c4-49b2-b920-22d396c27d3e")]
	public partial class HttpApiMediaType : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiMediaType domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb8e61b93, 0x76c4, 0x49b2, 0xb9, 0x20, 0x22, 0xd3, 0x96, 0xc2, 0x7d, 0x3e);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiMediaType(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiMediaType(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DisplayName domain property code
		
		/// <summary>
		/// DisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisplayNameDomainPropertyId = new global::System.Guid(0xf2689fd5, 0xbd29, 0x4fae, 0xae, 0xc4, 0x25, 0x60, 0xde, 0x08, 0xed, 0x22);
		
		/// <summary>
		/// Gets or sets the value of DisplayName domain property.
		/// This property is used for deplay within the designer
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiMediaType/DisplayName.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiMediaType/DisplayName.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiMediaType/DisplayName.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::ElementName]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("f2689fd5-bd29-4fae-aec4-2560de08ed22")]
		public global::System.String DisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DisplayNamePropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiMediaType.DisplayName domain property.
		/// </summary>
		internal sealed partial class DisplayNamePropertyHandler : DslModeling::CalculatedPropertyValueHandler<HttpApiMediaType, global::System.String>
		{
			private DisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiMediaType.DisplayName domain property value handler.
			/// </summary>
			public static readonly DisplayNamePropertyHandler Instance = new DisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiMediaType.DisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiMediaType element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for DisplayName because its Kind is
				// set to Calculated. Please provide the GetDisplayNameValue()
				// method on the domain class.
				return element.GetDisplayNameValue();
			}
		
		}
		
		#endregion
		#region DiscreteType domain property code
		
		/// <summary>
		/// DiscreteType domain property Id.
		/// </summary>
		public static readonly global::System.Guid DiscreteTypeDomainPropertyId = new global::System.Guid(0x518771c0, 0xb2e4, 0x415c, 0x98, 0xe1, 0xf5, 0xb0, 0x0b, 0x3d, 0x66, 0x96);
		
		/// <summary>
		/// Storage for DiscreteType
		/// </summary>
		private global::System.String discreteTypePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of DiscreteType domain property.
		/// Description for ApiStudioIO.HttpApiMediaType.Primary Type
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiMediaType/DiscreteType.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiMediaType/DiscreteType.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiMediaType/DiscreteType.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("518771c0-b2e4-415c-98e1-f5b00b3d6696")]
		public global::System.String DiscreteType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return discreteTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DiscreteTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiMediaType.DiscreteType domain property.
		/// </summary>
		internal sealed partial class DiscreteTypePropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiMediaType, global::System.String>
		{
			private DiscreteTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiMediaType.DiscreteType domain property value handler.
			/// </summary>
			public static readonly DiscreteTypePropertyHandler Instance = new DiscreteTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiMediaType.DiscreteType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DiscreteTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiMediaType element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.discreteTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiMediaType element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.discreteTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SubType domain property code
		
		/// <summary>
		/// SubType domain property Id.
		/// </summary>
		public static readonly global::System.Guid SubTypeDomainPropertyId = new global::System.Guid(0x9e6f9da7, 0xf54d, 0x4a7e, 0xa6, 0x53, 0xb1, 0x09, 0x50, 0x7f, 0x61, 0x62);
		
		/// <summary>
		/// Storage for SubType
		/// </summary>
		private global::System.String subTypePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of SubType domain property.
		/// Description for ApiStudioIO.HttpApiMediaType.Sub Type
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiMediaType/SubType.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiMediaType/SubType.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiMediaType/SubType.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("9e6f9da7-f54d-4a7e-a653-b109507f6162")]
		public global::System.String SubType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return subTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SubTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiMediaType.SubType domain property.
		/// </summary>
		internal sealed partial class SubTypePropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiMediaType, global::System.String>
		{
			private SubTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiMediaType.SubType domain property value handler.
			/// </summary>
			public static readonly SubTypePropertyHandler Instance = new SubTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiMediaType.SubType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SubTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiMediaType element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.subTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiMediaType element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.subTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiHeader
	/// Description for ApiStudioIO.HttpApiHeader
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHeader.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeader.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("95d800cc-950b-46a0-bc87-dbb012bd81d9")]
	public partial class HttpApiHeader : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiHeader domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x95d800cc, 0x950b, 0x46a0, 0xbc, 0x87, 0xdb, 0xb0, 0x12, 0xbd, 0x81, 0xd9);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiHeader(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiHeader(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x08d51db3, 0x4ab0, 0x4ff9, 0xa4, 0x4a, 0x23, 0x3d, 0x6f, 0x9e, 0x9a, 0x1e);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for ApiStudioIO.HttpApiHeader.Name
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHeader/Name.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiHeader/Name.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeader/Name.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("08d51db3-4ab0-4ff9-a44a-233d6f9e9a1e")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiHeader.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiHeader, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiHeader.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiHeader.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiHeader element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiHeader element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0x1c0871b0, 0xc0fe, 0x4c81, 0xa3, 0xe4, 0xd1, 0xc9, 0xd7, 0x8f, 0x7a, 0xac);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for ApiStudioIO.HttpApiHeader.Description
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHeader/Description.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiHeader/Description.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeader/Description.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1c0871b0-c0fe-4c81-a3e4-d1c9d78f7aac")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiHeader.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiHeader, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiHeader.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiHeader.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(HttpApiHeader element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiHeader element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsRequired domain property code
		
		/// <summary>
		/// IsRequired domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsRequiredDomainPropertyId = new global::System.Guid(0x8df27ba2, 0x6f45, 0x4f6b, 0xa2, 0x7f, 0xd3, 0x27, 0x27, 0xfe, 0xcc, 0xf3);
		
		/// <summary>
		/// Storage for IsRequired
		/// </summary>
		private global::System.Boolean isRequiredPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsRequired domain property.
		/// Description for ApiStudioIO.HttpApiHeader.Is Required
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHeader/IsRequired.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiHeader/IsRequired.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeader/IsRequired.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8df27ba2-6f45-4f6b-a27f-d32727feccf3")]
		public global::System.Boolean IsRequired
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isRequiredPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsRequiredPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiHeader.IsRequired domain property.
		/// </summary>
		internal sealed partial class IsRequiredPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiHeader, global::System.Boolean>
		{
			private IsRequiredPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiHeader.IsRequired domain property value handler.
			/// </summary>
			public static readonly IsRequiredPropertyHandler Instance = new IsRequiredPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiHeader.IsRequired domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsRequiredDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(HttpApiHeader element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isRequiredPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiHeader element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isRequiredPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region AllowEmptyValue domain property code
		
		/// <summary>
		/// AllowEmptyValue domain property Id.
		/// </summary>
		public static readonly global::System.Guid AllowEmptyValueDomainPropertyId = new global::System.Guid(0x6a60f8a8, 0x1e8b, 0x406b, 0x94, 0x2e, 0x08, 0x4e, 0x72, 0x9d, 0xf1, 0x56);
		
		/// <summary>
		/// Storage for AllowEmptyValue
		/// </summary>
		private global::System.Boolean allowEmptyValuePropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of AllowEmptyValue domain property.
		/// Description for ApiStudioIO.HttpApiHeader.Allow Empty Value
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHeader/AllowEmptyValue.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiHeader/AllowEmptyValue.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeader/AllowEmptyValue.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("6a60f8a8-1e8b-406b-942e-084e729df156")]
		public global::System.Boolean AllowEmptyValue
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return allowEmptyValuePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				AllowEmptyValuePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiHeader.AllowEmptyValue domain property.
		/// </summary>
		internal sealed partial class AllowEmptyValuePropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiHeader, global::System.Boolean>
		{
			private AllowEmptyValuePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiHeader.AllowEmptyValue domain property value handler.
			/// </summary>
			public static readonly AllowEmptyValuePropertyHandler Instance = new AllowEmptyValuePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiHeader.AllowEmptyValue domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return AllowEmptyValueDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(HttpApiHeader element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.allowEmptyValuePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiHeader element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.allowEmptyValuePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsAutoGenerated domain property code
		
		/// <summary>
		/// IsAutoGenerated domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsAutoGeneratedDomainPropertyId = new global::System.Guid(0x8b2e9d2b, 0x6a06, 0x4f6c, 0x89, 0x48, 0x75, 0xab, 0xb9, 0x3d, 0x81, 0xec);
		
		/// <summary>
		/// Storage for IsAutoGenerated
		/// </summary>
		private global::System.Boolean isAutoGeneratedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsAutoGenerated domain property.
		/// Description for ApiStudioIO.HttpApiHeader.Is Auto Generated
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHeader/IsAutoGenerated.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiHeader/IsAutoGenerated.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeader/IsAutoGenerated.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("8b2e9d2b-6a06-4f6c-8948-75abb93d81ec")]
		public global::System.Boolean IsAutoGenerated
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isAutoGeneratedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsAutoGeneratedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiHeader.IsAutoGenerated domain property.
		/// </summary>
		internal sealed partial class IsAutoGeneratedPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiHeader, global::System.Boolean>
		{
			private IsAutoGeneratedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiHeader.IsAutoGenerated domain property value handler.
			/// </summary>
			public static readonly IsAutoGeneratedPropertyHandler Instance = new IsAutoGeneratedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiHeader.IsAutoGenerated domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsAutoGeneratedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(HttpApiHeader element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isAutoGeneratedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiHeader element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isAutoGeneratedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiHeaderRequest
	/// Description for ApiStudioIO.HttpApiHeaderRequest
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHeaderRequest.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeaderRequest.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("fb7f3eaf-66bf-4cd2-8197-0eface693800")]
	public partial class HttpApiHeaderRequest : HttpApiHeader
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiHeaderRequest domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xfb7f3eaf, 0x66bf, 0x4cd2, 0x81, 0x97, 0x0e, 0xfa, 0xce, 0x69, 0x38, 0x00);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiHeaderRequest(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiHeaderRequest(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region HttpApi opposite domain role accessor
		/// <summary>
		/// Gets or sets HttpApi.
		/// Description for ApiStudioIO.HttpApiHasHeaderRequest.HttpApiHeaderRequest
		/// </summary>
		public virtual HttpApi HttpApi
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ApiStudioIO.HttpApiHasHeaderRequest.HttpApiHeaderRequestDomainRoleId) as HttpApi;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ApiStudioIO.HttpApiHasHeaderRequest.HttpApiHeaderRequestDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiHeaderResponse
	/// Description for ApiStudioIO.HttpApiHeaderResponse
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHeaderResponse.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeaderResponse.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("f9571f07-21e2-47b5-9490-2c8ad1cc2e1d")]
	public partial class HttpApiHeaderResponse : HttpApiHeader
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiHeaderResponse domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf9571f07, 0x21e2, 0x47b5, 0x94, 0x90, 0x2c, 0x8a, 0xd1, 0xcc, 0x2e, 0x1d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiHeaderResponse(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiHeaderResponse(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IncludeOn domain property code
		
		/// <summary>
		/// IncludeOn domain property Id.
		/// </summary>
		public static readonly global::System.Guid IncludeOnDomainPropertyId = new global::System.Guid(0xa835d551, 0x6b87, 0x4524, 0xb6, 0x93, 0x73, 0x96, 0x0c, 0xc4, 0x81, 0x12);
		
		/// <summary>
		/// Storage for IncludeOn
		/// </summary>
		private HttpApiHeaderResponseOnTypes includeOnPropertyStorage = HttpApiHeaderResponseOnTypes.OnSuccess;
		
		/// <summary>
		/// Gets or sets the value of IncludeOn domain property.
		/// Which type of response should the header be included with.
		/// </summary>
		[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHeaderResponse/IncludeOn.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("ApiStudioIO.HttpApiHeaderResponse/IncludeOn.Category", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHeaderResponse/IncludeOn.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(HttpApiHeaderResponseOnTypes.OnSuccess)]
		[DslModeling::DomainObjectId("a835d551-6b87-4524-b693-73960cc48112")]
		public HttpApiHeaderResponseOnTypes IncludeOn
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return includeOnPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IncludeOnPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the HttpApiHeaderResponse.IncludeOn domain property.
		/// </summary>
		internal sealed partial class IncludeOnPropertyHandler : DslModeling::DomainPropertyValueHandler<HttpApiHeaderResponse, HttpApiHeaderResponseOnTypes>
		{
			private IncludeOnPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the HttpApiHeaderResponse.IncludeOn domain property value handler.
			/// </summary>
			public static readonly IncludeOnPropertyHandler Instance = new IncludeOnPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the HttpApiHeaderResponse.IncludeOn domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IncludeOnDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed HttpApiHeaderResponseOnTypes GetValue(HttpApiHeaderResponse element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.includeOnPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(HttpApiHeaderResponse element, HttpApiHeaderResponseOnTypes newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				HttpApiHeaderResponseOnTypes oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.includeOnPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region HttpApi opposite domain role accessor
		/// <summary>
		/// Gets or sets HttpApi.
		/// Description for ApiStudioIO.HttpApiHasHeaderResponse.HttpApiHeaderResponse
		/// </summary>
		public virtual HttpApi HttpApi
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ApiStudioIO.HttpApiHasHeaderResponse.HttpApiHeaderResponseDomainRoleId) as HttpApi;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ApiStudioIO.HttpApiHasHeaderResponse.HttpApiHeaderResponseDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiPatch
	/// The PATCH method applies partial modifications to a resource.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiPatch.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiPatch.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("5267abe5-30c1-4358-9501-38bb12f095e8")]
	public partial class HttpApiPatch : HttpApi
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiPatch domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5267abe5, 0x30c1, 0x4358, 0x95, 0x01, 0x38, 0xbb, 0x12, 0xf0, 0x95, 0xe8);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiPatch(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiPatch(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiHead
	/// The HEAD method asks for a response identical to a GET request, but without the
	/// response body.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiHead.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiHead.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("8ba16422-637b-4fca-9615-3cd34954c929")]
	public partial class HttpApiHead : HttpApi
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiHead domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8ba16422, 0x637b, 0x4fca, 0x96, 0x15, 0x3c, 0xd3, 0x49, 0x54, 0xc9, 0x29);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiHead(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiHead(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiOptions
	/// The OPTIONS method describes the communication options for the target resource.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiOptions.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiOptions.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("752e81b2-4142-4109-a785-92bb44a69250")]
	public partial class HttpApiOptions : HttpApi
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiOptions domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x752e81b2, 0x4142, 0x4109, 0xa7, 0x85, 0x92, 0xbb, 0x44, 0xa6, 0x92, 0x50);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiOptions(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiOptions(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ApiStudioIO
{
	/// <summary>
	/// DomainClass HttpApiTrace
	/// The TRACE method performs a message loop-back test along the path to the target
	/// resource.
	/// </summary>
	[DslDesign::DisplayNameResource("ApiStudioIO.HttpApiTrace.DisplayName", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ApiStudioIO.HttpApiTrace.Description", typeof(global::ApiStudioIO.ApiStudioIODomainModel), "ApiStudioIO.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ApiStudioIO.ApiStudioIODomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("d9341680-ce85-4083-ad0f-e15d44d3d9b9")]
	public partial class HttpApiTrace : HttpApi
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// HttpApiTrace domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd9341680, 0xce85, 0x4083, 0xad, 0x0f, 0xe1, 0x5d, 0x44, 0xd3, 0xd9, 0xb9);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiTrace(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public HttpApiTrace(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
