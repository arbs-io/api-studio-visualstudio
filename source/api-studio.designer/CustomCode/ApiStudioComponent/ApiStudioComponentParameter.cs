namespace ApiStudioIO
{
    using System;
    using System.ComponentModel;

    public class ApiStudioComponentParameter : IApiStudioComponent
    {
        public static implicit operator ApiStudioComponentParameter(HttpApiParameter domain)
        {
            string fromType = Enum.GetName(typeof(HttpApiParameterTypes), domain.FromType);
            var apiStudioComponent = new ApiStudioComponentParameter
            {
                Identifier = domain.Identifier,
                DataType = domain.DataType,
                Description = domain.Description,
                IsRequired = domain.IsRequired,
                FromType = (HttpApiParameterTypes)Enum.Parse(typeof(HttpApiParameterTypes), fromType),
                IsAutoGenerated = domain.IsAutoGenerated
            };
            return apiStudioComponent;
        }

        [Category("Hiddend")]
        [Browsable(false)]
        public string Name => $"{Identifier} ({DataType}) [{ Enum.GetName(typeof(HttpApiParameterTypes), FromType)}]";

        [Category("Definition")]
        public string Identifier { get; set; } = "ParameterName";

        [Category("Definition")]
        public string DataType { get; set; } = "string";

        [Category("Definition")]
        public string Description { get; set; } = "This is a description about the API parameter";

        [Category("Definition")]
        public bool IsRequired { get; set; } = false;

        [Category("Definition")]
        public HttpApiParameterTypes FromType { get; set; } = HttpApiParameterTypes.Query;

        [Category("ApiStudio Metadata")]
        public bool IsAutoGenerated { get; internal set; } = false;
    }
}